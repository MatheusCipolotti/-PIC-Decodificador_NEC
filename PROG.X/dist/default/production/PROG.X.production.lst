

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 16:22:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0008                     	;# 
   247     0009                     	;# 
   248     000A                     	;# 
   249     000B                     	;# 
   250     000C                     	;# 
   251     000D                     	;# 
   252     000E                     	;# 
   253     000E                     	;# 
   254     000F                     	;# 
   255     0010                     	;# 
   256     0011                     	;# 
   257     0012                     	;# 
   258     0013                     	;# 
   259     0014                     	;# 
   260     0015                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001D                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     0081                     	;# 
   274     0085                     	;# 
   275     0086                     	;# 
   276     0087                     	;# 
   277     0088                     	;# 
   278     0089                     	;# 
   279     008C                     	;# 
   280     008D                     	;# 
   281     008E                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298                           
   299                           	psect	idataBANK0
   300     01B1                     __pidataBANK0:
   301                           
   302                           ;initializer for _code
   303     01B1  3430               	retlw	48
   304     01B2  3430               	retlw	48
   305     01B3  3430               	retlw	48
   306     01B4  3430               	retlw	48
   307     01B5  3430               	retlw	48
   308     01B6  3430               	retlw	48
   309     01B7  3430               	retlw	48
   310     01B8  3430               	retlw	48
   311     01B9  3431               	retlw	49
   312     01BA  3431               	retlw	49
   313     01BB  3431               	retlw	49
   314     01BC  3431               	retlw	49
   315     01BD  3431               	retlw	49
   316     01BE  3431               	retlw	49
   317     01BF  3431               	retlw	49
   318     01C0  3431               	retlw	49
   319     01C1  3430               	retlw	48
   320     01C2  3430               	retlw	48
   321     01C3  3430               	retlw	48
   322     01C4  3430               	retlw	48
   323     01C5  3430               	retlw	48
   324     01C6  3430               	retlw	48
   325     01C7  3430               	retlw	48
   326     01C8  3430               	retlw	48
   327     01C9  3431               	retlw	49
   328     01CA  3431               	retlw	49
   329     01CB  3431               	retlw	49
   330     01CC  3431               	retlw	49
   331     01CD  3431               	retlw	49
   332     01CE  3431               	retlw	49
   333     01CF  3431               	retlw	49
   334     01D0  3431               	retlw	49
   335     01D1  3400               	retlw	0
   336     0019                     _TXREG	set	25
   337     0007                     _PORTC	set	7
   338     0006                     _PORTB	set	6
   339     0018                     _RCSTAbits	set	24
   340     000B                     _INTCONbits	set	11
   341     0006                     _PORTBbits	set	6
   342     0059                     _INTF	set	89
   343     0087                     _TRISC	set	135
   344     0086                     _TRISB	set	134
   345     0098                     _TXSTAbits	set	152
   346     0099                     _SPBRG	set	153
   347     0081                     _OPTION_REGbits	set	129
   348     009C                     _CMCON	set	156
   349     04C1                     _TRMT	set	1217
   350                           
   351                           	psect	cinit
   352     0011                     start_initialization:	
   353                           ; #config settings
   354                           
   355     0011                     __initialization:
   356                           
   357                           ; Initialize objects allocated to BANK0
   358     0011  1383               	bcf	3,7	;select IRP bank0
   359     0012  3041               	movlw	low (__pdataBANK0+33)
   360     0013  00FD               	movwf	btemp+-1
   361     0014  3001               	movlw	high __pidataBANK0
   362     0015  00FE               	movwf	btemp
   363     0016  30B1               	movlw	low __pidataBANK0
   364     0017  00FF               	movwf	btemp+1
   365     0018  3020               	movlw	low __pdataBANK0
   366     0019  0084               	movwf	4
   367     001A  120A  118A  220B  120A  118A  	fcall	init_ram0
   368                           
   369                           ; Clear objects allocated to BANK0
   370     001F  01DA               	clrf	__pbssBANK0& (0+127)
   371     0020  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   372     0021  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   373     0022  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   374     0023  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   375     0024  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   376     0025  01E0               	clrf	(__pbssBANK0+6)& (0+127)
   377     0026                     end_of_initialization:	
   378                           ;End of C runtime variable initialization code
   379                           
   380     0026                     __end_of__initialization:
   381     0026  0183               	clrf	3
   382     0027  120A  118A  298D   	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	bssBANK0
   385     005A                     __pbssBANK0:
   386     005A                     _decimalValue:
   387     005A                     	ds	4
   388     005E                     _code_count:
   389     005E                     	ds	1
   390     005F                     _trava:
   391     005F                     	ds	1
   392     0060                     _counter:
   393     0060                     	ds	1
   394                           
   395                           	psect	dataBANK0
   396     0020                     __pdataBANK0:
   397     0020                     _code:
   398     0020                     	ds	33
   399                           
   400                           	psect	inittext
   401     0207                     init_fetch0:	
   402                           ;	Called with low address in FSR and high address in W
   403                           
   404     0207  087E               	movf	btemp,w
   405     0208  008A               	movwf	10
   406     0209  087F               	movf	btemp+1,w
   407     020A  0082               	movwf	2
   408     020B                     init_ram0:	
   409                           ;Called with:
   410                           ;	high address of idata address in btemp 
   411                           ;	low address of idata address in btemp+1 
   412                           ;	low address of data in FSR
   413                           ;	high address + 1 of data in btemp-1
   414                           
   415     020B  120A  118A  2207  120A  118A  	fcall	init_fetch0
   416     0210  0080               	movwf	0
   417     0211  0A84               	incf	4,f
   418     0212  0804               	movf	4,w
   419     0213  067D               	xorwf	btemp+-1,w
   420     0214  1903               	btfsc	3,2
   421     0215  3400               	retlw	0
   422     0216  0AFF               	incf	btemp+1,f
   423     0217  1903               	btfsc	3,2
   424     0218  0AFE               	incf	btemp,f
   425     0219  2A0B               	goto	init_ram0
   426                           
   427                           	psect	cstackCOMMON
   428     0070                     __pcstackCOMMON:
   429     0070                     ?_IR_Read:
   430     0070                     ?_global:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ??_global:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_UART_Write:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ?_UART_Write_Text:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_UART_Write_Text_ln:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 1 bytes @ 0x0
   450     0070                     	ds	4
   451     0074                     ??_UART_Write:
   452     0074                     ?_binaryToDecimal:	
   453                           ; 1 bytes @ 0x4
   454                           
   455     0074                     UART_Write@data:	
   456                           ; 4 bytes @ 0x4
   457                           
   458                           
   459                           ; 1 bytes @ 0x4
   460     0074                     	ds	1
   461     0075                     ??_UART_Write_Text:
   462                           
   463                           ; 1 bytes @ 0x5
   464     0075                     	ds	1
   465     0076                     UART_Write_Text@i:
   466                           
   467                           ; 2 bytes @ 0x6
   468     0076                     	ds	2
   469     0078                     UART_Write_Text@text:
   470                           
   471                           ; 1 bytes @ 0x8
   472     0078                     	ds	1
   473     0079                     ??_UART_Write_Text_ln:
   474     0079                     UART_Write_Text_ln@text:	
   475                           ; 1 bytes @ 0x9
   476                           
   477                           
   478                           ; 1 bytes @ 0x9
   479     0079                     	ds	1
   480     007A                     ??_main:
   481                           
   482                           	psect	cstackBANK0
   483     0041                     __pcstackBANK0:	
   484                           ; 1 bytes @ 0xA
   485                           
   486     0041                     ??_binaryToDecimal:
   487                           
   488                           ; 1 bytes @ 0x0
   489     0041                     	ds	11
   490     004C                     binaryToDecimal@binaryVector:
   491                           
   492                           ; 1 bytes @ 0xB
   493     004C                     	ds	1
   494     004D                     binaryToDecimal@decimalValue:
   495                           
   496                           ; 4 bytes @ 0xC
   497     004D                     	ds	4
   498     0051                     binaryToDecimal@i:
   499                           
   500                           ; 2 bytes @ 0x10
   501     0051                     	ds	2
   502     0053                     ??_IR_Read:
   503                           
   504                           ; 1 bytes @ 0x12
   505     0053                     	ds	3
   506     0056                     IR_Read@i:
   507                           
   508                           ; 2 bytes @ 0x15
   509     0056                     	ds	2
   510     0058                     IR_Read@i_289:
   511                           
   512                           ; 2 bytes @ 0x17
   513     0058                     	ds	2
   514                           
   515                           	psect	maintext
   516     018D                     __pmaintext:	
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 35 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : B00/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels required when called: 5
   542 ;; This function calls:
   543 ;;		_IR_Read
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549     018D                     _main:	
   550                           ;psect for function _main
   551                           
   552     018D                     l932:	
   553                           ;incstack = 0
   554                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   555                           
   556                           
   557                           ;main.c: 36:     CMCON = 0x07;
   558     018D  3007               	movlw	7
   559     018E  1683               	bsf	3,5	;RP0=1, select bank1
   560     018F  1303               	bcf	3,6	;RP1=0, select bank1
   561     0190  009C               	movwf	28	;volatile
   562     0191                     l934:
   563                           
   564                           ;main.c: 39:     INTCONbits.GIE = 0x01;
   565     0191  178B               	bsf	11,7	;volatile
   566     0192                     l936:
   567                           
   568                           ;main.c: 40:     INTCONbits.PEIE = 0x00;
   569     0192  130B               	bcf	11,6	;volatile
   570     0193                     l938:
   571                           
   572                           ;main.c: 41:     INTCONbits.INTE = 0x01;
   573     0193  160B               	bsf	11,4	;volatile
   574     0194                     l940:
   575                           
   576                           ;main.c: 42:     INTCONbits.INTF = 0x00;
   577     0194  108B               	bcf	11,1	;volatile
   578     0195                     l942:
   579                           
   580                           ;main.c: 43:     OPTION_REGbits.INTEDG = 0x00;
   581     0195  1301               	bcf	1,6	;volatile
   582                           
   583                           ;main.c: 46:     SPBRG = 31;
   584     0196  301F               	movlw	31
   585     0197  0099               	movwf	25	;volatile
   586     0198                     l944:
   587                           
   588                           ;main.c: 47:     TXSTAbits.SYNC = 0;
   589     0198  1218               	bcf	24,4	;volatile
   590     0199                     l946:
   591                           
   592                           ;main.c: 48:     TXSTAbits.TXEN = 1;
   593     0199  1698               	bsf	24,5	;volatile
   594     019A                     l948:
   595                           
   596                           ;main.c: 49:     RCSTAbits.SPEN = 1;
   597     019A  1283               	bcf	3,5	;RP0=0, select bank0
   598     019B  1303               	bcf	3,6	;RP1=0, select bank0
   599     019C  1798               	bsf	24,7	;volatile
   600     019D                     l950:
   601                           
   602                           ;main.c: 50:     RCSTAbits.CREN = 1;
   603     019D  1618               	bsf	24,4	;volatile
   604                           
   605                           ;main.c: 53:     TRISB = 0x01;
   606     019E  3001               	movlw	1
   607     019F  1683               	bsf	3,5	;RP0=1, select bank1
   608     01A0  1303               	bcf	3,6	;RP1=0, select bank1
   609     01A1  0086               	movwf	6	;volatile
   610                           
   611                           ;main.c: 54:     TRISC = 0x80;
   612     01A2  3080               	movlw	128
   613     01A3  0087               	movwf	7	;volatile
   614     01A4                     l952:
   615                           
   616                           ;main.c: 55:     PORTB = 0x00;
   617     01A4  1283               	bcf	3,5	;RP0=0, select bank0
   618     01A5  1303               	bcf	3,6	;RP1=0, select bank0
   619     01A6  0186               	clrf	6	;volatile
   620     01A7                     l954:
   621                           
   622                           ;main.c: 56:     PORTC = 0x00;
   623     01A7  0187               	clrf	7	;volatile
   624     01A8                     l956:
   625                           
   626                           ;main.c: 59:         IR_Read();
   627     01A8  120A  118A  202A  120A  118A  	fcall	_IR_Read
   628     01AD  29A8               	goto	l956
   629     01AE  120A  118A  280E   	ljmp	start
   630     01B1                     __end_of_main:
   631                           
   632                           	psect	text1
   633     002A                     __ptext1:	
   634 ;; *************** function _IR_Read *****************
   635 ;; Defined at:
   636 ;;		line 19 in file "Bibliotecas/IR_C.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  i               2   23[BANK0 ] int 
   641 ;;  i               2   21[BANK0 ] int 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       4       0       0       0
   653 ;;      Temps:          0       3       0       0       0
   654 ;;      Totals:         0       7       0       0       0
   655 ;;Total ram usage:        7 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 4
   658 ;; This function calls:
   659 ;;		_UART_Write_Text_ln
   660 ;;		_binaryToDecimal
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666     002A                     _IR_Read:	
   667                           ;psect for function _IR_Read
   668                           
   669     002A                     l840:	
   670                           ;incstack = 0
   671                           ; Regs used in _IR_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   672                           
   673                           
   674                           ;Bibliotecas/IR_C.c: 20:     if(counter >= 80 && counter <= 100){
   675     002A  3050               	movlw	80
   676     002B  1283               	bcf	3,5	;RP0=0, select bank0
   677     002C  1303               	bcf	3,6	;RP1=0, select bank0
   678     002D  0260               	subwf	_counter,w
   679     002E  1C03               	skipc
   680     002F  2831               	goto	u281
   681     0030  2832               	goto	u280
   682     0031                     u281:
   683     0031  2843               	goto	l850
   684     0032                     u280:
   685     0032                     l842:
   686     0032  3065               	movlw	101
   687     0033  0260               	subwf	_counter,w
   688     0034  1803               	skipnc
   689     0035  2837               	goto	u291
   690     0036  2838               	goto	u290
   691     0037                     u291:
   692     0037  2843               	goto	l850
   693     0038                     u290:
   694     0038                     l844:
   695                           
   696                           ;Bibliotecas/IR_C.c: 22:         OPTION_REGbits.INTEDG = 1;
   697     0038  1683               	bsf	3,5	;RP0=1, select bank1
   698     0039  1303               	bcf	3,6	;RP1=0, select bank1
   699     003A  1701               	bsf	1,6	;volatile
   700     003B                     l846:
   701                           
   702                           ;Bibliotecas/IR_C.c: 23:         trava++;
   703     003B  3001               	movlw	1
   704     003C  00FF               	movwf	btemp+1
   705     003D  087F               	movf	btemp+1,w
   706     003E  1283               	bcf	3,5	;RP0=0, select bank0
   707     003F  1303               	bcf	3,6	;RP1=0, select bank0
   708     0040  07DF               	addwf	_trava,f
   709     0041                     l848:
   710                           
   711                           ;Bibliotecas/IR_C.c: 24:         counter = 0x00;
   712     0041  01E0               	clrf	_counter
   713                           
   714                           ;Bibliotecas/IR_C.c: 25:     }
   715     0042  28F3               	goto	l106
   716     0043                     l850:
   717     0043  301A               	movlw	26
   718     0044  0260               	subwf	_counter,w
   719     0045  1C03               	skipc
   720     0046  2848               	goto	u301
   721     0047  2849               	goto	u300
   722     0048                     u301:
   723     0048  286E               	goto	l866
   724     0049                     u300:
   725     0049                     l852:
   726     0049  3050               	movlw	80
   727     004A  0260               	subwf	_counter,w
   728     004B  1803               	skipnc
   729     004C  284E               	goto	u311
   730     004D  284F               	goto	u310
   731     004E                     u311:
   732     004E  286E               	goto	l866
   733     004F                     u310:
   734     004F                     l854:
   735                           
   736                           ;Bibliotecas/IR_C.c: 28:         counter = 0x00;
   737     004F  01E0               	clrf	_counter
   738                           
   739                           ;Bibliotecas/IR_C.c: 29:         for(int i = 0; i < 31; i++){
   740     0050  01D6               	clrf	IR_Read@i
   741     0051  01D7               	clrf	IR_Read@i+1
   742     0052                     l860:
   743                           
   744                           ;Bibliotecas/IR_C.c: 30:             code[i] = '0';
   745     0052  1283               	bcf	3,5	;RP0=0, select bank0
   746     0053  1303               	bcf	3,6	;RP1=0, select bank0
   747     0054  0856               	movf	IR_Read@i,w
   748     0055  3E20               	addlw	(low (_code| 0))& (0+255)
   749     0056  0084               	movwf	4
   750     0057  3030               	movlw	48
   751     0058  1383               	bcf	3,7	;select IRP bank0
   752     0059  0080               	movwf	0
   753     005A                     l862:
   754                           
   755                           ;Bibliotecas/IR_C.c: 31:         }
   756     005A  3001               	movlw	1
   757     005B  07D6               	addwf	IR_Read@i,f
   758     005C  1803               	skipnc
   759     005D  0AD7               	incf	IR_Read@i+1,f
   760     005E  3000               	movlw	0
   761     005F  07D7               	addwf	IR_Read@i+1,f
   762     0060                     l864:
   763     0060  0857               	movf	IR_Read@i+1,w
   764     0061  3A80               	xorlw	128
   765     0062  00FF               	movwf	btemp+1
   766     0063  3080               	movlw	128
   767     0064  027F               	subwf	btemp+1,w
   768     0065  1D03               	skipz
   769     0066  2869               	goto	u325
   770     0067  301F               	movlw	31
   771     0068  0256               	subwf	IR_Read@i,w
   772     0069                     u325:
   773     0069  1C03               	skipc
   774     006A  286C               	goto	u321
   775     006B  286D               	goto	u320
   776     006C                     u321:
   777     006C  2852               	goto	l860
   778     006D                     u320:
   779     006D  28F3               	goto	l106
   780     006E                     l866:
   781     006E  3065               	movlw	101
   782     006F  0260               	subwf	_counter,w
   783     0070  1C03               	skipc
   784     0071  2873               	goto	u331
   785     0072  2874               	goto	u330
   786     0073                     u331:
   787     0073  2893               	goto	l880
   788     0074                     u330:
   789     0074                     l868:
   790                           
   791                           ;Bibliotecas/IR_C.c: 35:         counter = 0x00;
   792     0074  01E0               	clrf	_counter
   793                           
   794                           ;Bibliotecas/IR_C.c: 36:         for(int i = 0; i < 31; i++){
   795     0075  01D8               	clrf	IR_Read@i_289
   796     0076  01D9               	clrf	IR_Read@i_289+1
   797     0077                     l874:
   798                           
   799                           ;Bibliotecas/IR_C.c: 37:             code[i] = '0';
   800     0077  1283               	bcf	3,5	;RP0=0, select bank0
   801     0078  1303               	bcf	3,6	;RP1=0, select bank0
   802     0079  0858               	movf	IR_Read@i_289,w
   803     007A  3E20               	addlw	(low (_code| 0))& (0+255)
   804     007B  0084               	movwf	4
   805     007C  3030               	movlw	48
   806     007D  1383               	bcf	3,7	;select IRP bank0
   807     007E  0080               	movwf	0
   808     007F                     l876:
   809                           
   810                           ;Bibliotecas/IR_C.c: 38:         }
   811     007F  3001               	movlw	1
   812     0080  07D8               	addwf	IR_Read@i_289,f
   813     0081  1803               	skipnc
   814     0082  0AD9               	incf	IR_Read@i_289+1,f
   815     0083  3000               	movlw	0
   816     0084  07D9               	addwf	IR_Read@i_289+1,f
   817     0085                     l878:
   818     0085  0859               	movf	IR_Read@i_289+1,w
   819     0086  3A80               	xorlw	128
   820     0087  00FF               	movwf	btemp+1
   821     0088  3080               	movlw	128
   822     0089  027F               	subwf	btemp+1,w
   823     008A  1D03               	skipz
   824     008B  288E               	goto	u345
   825     008C  301F               	movlw	31
   826     008D  0258               	subwf	IR_Read@i_289,w
   827     008E                     u345:
   828     008E  1C03               	skipc
   829     008F  2891               	goto	u341
   830     0090  2892               	goto	u340
   831     0091                     u341:
   832     0091  2877               	goto	l874
   833     0092                     u340:
   834     0092  28F3               	goto	l106
   835     0093                     l880:
   836     0093  3004               	movlw	4
   837     0094  0260               	subwf	_counter,w
   838     0095  1C03               	skipc
   839     0096  2898               	goto	u351
   840     0097  2899               	goto	u350
   841     0098                     u351:
   842     0098  28AE               	goto	l892
   843     0099                     u350:
   844     0099                     l882:
   845     0099  3009               	movlw	9
   846     009A  0260               	subwf	_counter,w
   847     009B  1803               	skipnc
   848     009C  289E               	goto	u361
   849     009D  289F               	goto	u360
   850     009E                     u361:
   851     009E  28AE               	goto	l892
   852     009F                     u360:
   853     009F                     l884:
   854                           
   855                           ;Bibliotecas/IR_C.c: 42:         code[code_count] = '0';
   856     009F  085E               	movf	_code_count,w
   857     00A0  3E20               	addlw	(low (_code| 0))& (0+255)
   858     00A1  0084               	movwf	4
   859     00A2  3030               	movlw	48
   860     00A3  1383               	bcf	3,7	;select IRP bank0
   861     00A4  0080               	movwf	0
   862     00A5                     l886:
   863                           
   864                           ;Bibliotecas/IR_C.c: 43:         trava++;
   865     00A5  3001               	movlw	1
   866     00A6  00FF               	movwf	btemp+1
   867     00A7  087F               	movf	btemp+1,w
   868     00A8  07DF               	addwf	_trava,f
   869     00A9                     l888:
   870                           
   871                           ;Bibliotecas/IR_C.c: 44:         code_count++;
   872     00A9  3001               	movlw	1
   873     00AA  00FF               	movwf	btemp+1
   874     00AB  087F               	movf	btemp+1,w
   875     00AC  07DE               	addwf	_code_count,f
   876     00AD  2841               	goto	l848
   877     00AE                     l892:
   878     00AE  3009               	movlw	9
   879     00AF  0260               	subwf	_counter,w
   880     00B0  1C03               	skipc
   881     00B1  28B3               	goto	u371
   882     00B2  28B4               	goto	u370
   883     00B3                     u371:
   884     00B3  28C1               	goto	l904
   885     00B4                     u370:
   886     00B4                     l894:
   887     00B4  301A               	movlw	26
   888     00B5  0260               	subwf	_counter,w
   889     00B6  1803               	skipnc
   890     00B7  28B9               	goto	u381
   891     00B8  28BA               	goto	u380
   892     00B9                     u381:
   893     00B9  28C1               	goto	l904
   894     00BA                     u380:
   895     00BA                     l896:
   896                           
   897                           ;Bibliotecas/IR_C.c: 49:         code[code_count] = '1';
   898     00BA  085E               	movf	_code_count,w
   899     00BB  3E20               	addlw	(low (_code| 0))& (0+255)
   900     00BC  0084               	movwf	4
   901     00BD  3031               	movlw	49
   902     00BE  1383               	bcf	3,7	;select IRP bank0
   903     00BF  0080               	movwf	0
   904     00C0  28A5               	goto	l886
   905     00C1                     l904:
   906     00C1  3020               	movlw	32
   907     00C2  065E               	xorwf	_code_count,w
   908     00C3  1D03               	btfss	3,2
   909     00C4  28C6               	goto	u391
   910     00C5  28C7               	goto	u390
   911     00C6                     u391:
   912     00C6  28F3               	goto	l96
   913     00C7                     u390:
   914     00C7                     l906:
   915                           
   916                           ;Bibliotecas/IR_C.c: 55:         trava = 0x00;
   917     00C7  01DF               	clrf	_trava
   918                           
   919                           ;Bibliotecas/IR_C.c: 56:         counter = 0x00;
   920     00C8  01E0               	clrf	_counter
   921                           
   922                           ;Bibliotecas/IR_C.c: 57:         code_count = 0x00;
   923     00C9  01DE               	clrf	_code_count
   924     00CA                     l908:
   925                           
   926                           ;Bibliotecas/IR_C.c: 58:         OPTION_REGbits.INTEDG = 0;
   927     00CA  1683               	bsf	3,5	;RP0=1, select bank1
   928     00CB  1303               	bcf	3,6	;RP1=0, select bank1
   929     00CC  1301               	bcf	1,6	;volatile
   930     00CD                     l910:
   931                           
   932                           ;Bibliotecas/IR_C.c: 60:         decimalValue = binaryToDecimal(code);
   933     00CD  3020               	movlw	(low (_code| 0))& (0+255)
   934     00CE  120A  118A  20F4  120A  118A  	fcall	_binaryToDecimal
   935     00D3  0877               	movf	?_binaryToDecimal+3,w
   936     00D4  1283               	bcf	3,5	;RP0=0, select bank0
   937     00D5  1303               	bcf	3,6	;RP1=0, select bank0
   938     00D6  00DD               	movwf	_decimalValue+3
   939     00D7  0876               	movf	?_binaryToDecimal+2,w
   940     00D8  00DC               	movwf	_decimalValue+2
   941     00D9  0875               	movf	?_binaryToDecimal+1,w
   942     00DA  00DB               	movwf	_decimalValue+1
   943     00DB  0874               	movf	?_binaryToDecimal,w
   944     00DC  00DA               	movwf	_decimalValue
   945     00DD                     l912:
   946                           
   947                           ;Bibliotecas/IR_C.c: 61:         UART_Write_Text_ln(code);
   948     00DD  3020               	movlw	(low (_code| 0))& (0+255)
   949     00DE  120A  118A  21F3  120A  118A  	fcall	_UART_Write_Text_ln
   950     00E3                     l914:
   951                           
   952                           ;Bibliotecas/IR_C.c: 63:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   953     00E3  301A               	movlw	26
   954     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   955     00E5  1303               	bcf	3,6	;RP1=0, select bank0
   956     00E6  00D5               	movwf	??_IR_Read+2
   957     00E7  305E               	movlw	94
   958     00E8  00D4               	movwf	??_IR_Read+1
   959     00E9  306D               	movlw	109
   960     00EA  00D3               	movwf	??_IR_Read
   961     00EB                     u457:
   962     00EB  0BD3               	decfsz	??_IR_Read,f
   963     00EC  28EB               	goto	u457
   964     00ED  0BD4               	decfsz	??_IR_Read+1,f
   965     00EE  28EB               	goto	u457
   966     00EF  0BD5               	decfsz	??_IR_Read+2,f
   967     00F0  28EB               	goto	u457
   968     00F1  28F2               	nop2
   969     00F2  28F3               	goto	l106
   970     00F3                     l96:
   971     00F3                     l106:
   972     00F3  0008               	return
   973     00F4                     __end_of_IR_Read:
   974                           
   975                           	psect	text2
   976     00F4                     __ptext2:	
   977 ;; *************** function _binaryToDecimal *****************
   978 ;; Defined at:
   979 ;;		line 10 in file "Bibliotecas/IR_C.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  binaryVector    1    wreg     PTR const unsigned char 
   982 ;;		 -> code(33), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  binaryVector    1   11[BANK0 ] PTR const unsigned char 
   985 ;;		 -> code(33), 
   986 ;;  i               2   16[BANK0 ] int 
   987 ;;  decimalValue    4   12[BANK0 ] unsigned long 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  4    4[COMMON] unsigned long 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         4       0       0       0       0
   998 ;;      Locals:         0       7       0       0       0
   999 ;;      Temps:          0      11       0       0       0
  1000 ;;      Totals:         4      18       0       0       0
  1001 ;;Total ram usage:       22 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_IR_Read
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011     00F4                     _binaryToDecimal:	
  1012                           ;psect for function _binaryToDecimal
  1013                           
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _binaryToDecimal: [wreg-fsr0h+status,2+status,0+btemp+1]
  1017                           ;binaryToDecimal@binaryVector stored from wreg
  1018     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1019     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1020     00F6  00CC               	movwf	binaryToDecimal@binaryVector
  1021     00F7                     l822:
  1022                           
  1023                           ;Bibliotecas/IR_C.c: 11: uint32_t decimalValue = 0;
  1024     00F7  3000               	movlw	0
  1025     00F8  00D0               	movwf	binaryToDecimal@decimalValue+3
  1026     00F9  3000               	movlw	0
  1027     00FA  00CF               	movwf	binaryToDecimal@decimalValue+2
  1028     00FB  3000               	movlw	0
  1029     00FC  00CE               	movwf	binaryToDecimal@decimalValue+1
  1030     00FD  3000               	movlw	0
  1031     00FE  00CD               	movwf	binaryToDecimal@decimalValue
  1032     00FF                     l824:
  1033                           
  1034                           ;Bibliotecas/IR_C.c: 12:     for (int i = 0; i < 32; i++) {
  1035     00FF  01D1               	clrf	binaryToDecimal@i
  1036     0100  01D2               	clrf	binaryToDecimal@i+1
  1037     0101                     l830:
  1038                           
  1039                           ;Bibliotecas/IR_C.c: 14:         decimalValue = (decimalValue << 1) + (binaryVector[i] -
      +                           '0');
  1040     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1041     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1042     0103  0851               	movf	binaryToDecimal@i,w
  1043     0104  074C               	addwf	binaryToDecimal@binaryVector,w
  1044     0105  00C1               	movwf	??_binaryToDecimal
  1045     0106  0841               	movf	??_binaryToDecimal,w
  1046     0107  0084               	movwf	4
  1047     0108  1383               	bcf	3,7	;select IRP bank0
  1048     0109  0800               	movf	0,w
  1049     010A  3ED0               	addlw	208
  1050     010B  00C2               	movwf	??_binaryToDecimal+1
  1051     010C  30FF               	movlw	255
  1052     010D  1803               	skipnc
  1053     010E  3000               	movlw	0
  1054     010F  00C3               	movwf	??_binaryToDecimal+2
  1055     0110  0842               	movf	??_binaryToDecimal+1,w
  1056     0111  00C4               	movwf	??_binaryToDecimal+3
  1057     0112  0843               	movf	??_binaryToDecimal+2,w
  1058     0113  00C5               	movwf	??_binaryToDecimal+4
  1059     0114  01C6               	clrf	??_binaryToDecimal+5
  1060     0115  01C7               	clrf	??_binaryToDecimal+6
  1061     0116  084D               	movf	binaryToDecimal@decimalValue,w
  1062     0117  00C8               	movwf	??_binaryToDecimal+7
  1063     0118  084E               	movf	binaryToDecimal@decimalValue+1,w
  1064     0119  00C9               	movwf	??_binaryToDecimal+8
  1065     011A  084F               	movf	binaryToDecimal@decimalValue+2,w
  1066     011B  00CA               	movwf	??_binaryToDecimal+9
  1067     011C  0850               	movf	binaryToDecimal@decimalValue+3,w
  1068     011D  00CB               	movwf	??_binaryToDecimal+10
  1069     011E  3001               	movlw	1
  1070     011F                     u255:
  1071     011F  1003               	clrc
  1072     0120  0DC8               	rlf	??_binaryToDecimal+7,f
  1073     0121  0DC9               	rlf	??_binaryToDecimal+8,f
  1074     0122  0DCA               	rlf	??_binaryToDecimal+9,f
  1075     0123  0DCB               	rlf	??_binaryToDecimal+10,f
  1076     0124                     u250:
  1077     0124  3EFF               	addlw	-1
  1078     0125  1D03               	skipz
  1079     0126  291F               	goto	u255
  1080     0127  0848               	movf	??_binaryToDecimal+7,w
  1081     0128  07C4               	addwf	??_binaryToDecimal+3,f
  1082     0129  0849               	movf	??_binaryToDecimal+8,w
  1083     012A  1803               	skipnc
  1084     012B  0F49               	incfsz	??_binaryToDecimal+8,w
  1085     012C  292E               	goto	u260
  1086     012D  292F               	goto	u261
  1087     012E                     u260:
  1088     012E  07C5               	addwf	??_binaryToDecimal+4,f
  1089     012F                     u261:
  1090     012F  084A               	movf	??_binaryToDecimal+9,w
  1091     0130  1803               	skipnc
  1092     0131  0F4A               	incfsz	??_binaryToDecimal+9,w
  1093     0132  2934               	goto	u262
  1094     0133  2935               	goto	u263
  1095     0134                     u262:
  1096     0134  07C6               	addwf	??_binaryToDecimal+5,f
  1097     0135                     u263:
  1098     0135  084B               	movf	??_binaryToDecimal+10,w
  1099     0136  1803               	skipnc
  1100     0137  0A4B               	incf	??_binaryToDecimal+10,w
  1101     0138  07C7               	addwf	??_binaryToDecimal+6,f
  1102     0139  0847               	movf	??_binaryToDecimal+6,w
  1103     013A  00D0               	movwf	binaryToDecimal@decimalValue+3
  1104     013B  0846               	movf	??_binaryToDecimal+5,w
  1105     013C  00CF               	movwf	binaryToDecimal@decimalValue+2
  1106     013D  0845               	movf	??_binaryToDecimal+4,w
  1107     013E  00CE               	movwf	binaryToDecimal@decimalValue+1
  1108     013F  0844               	movf	??_binaryToDecimal+3,w
  1109     0140  00CD               	movwf	binaryToDecimal@decimalValue
  1110     0141                     l832:
  1111                           
  1112                           ;Bibliotecas/IR_C.c: 15:     }
  1113     0141  3001               	movlw	1
  1114     0142  07D1               	addwf	binaryToDecimal@i,f
  1115     0143  1803               	skipnc
  1116     0144  0AD2               	incf	binaryToDecimal@i+1,f
  1117     0145  3000               	movlw	0
  1118     0146  07D2               	addwf	binaryToDecimal@i+1,f
  1119     0147                     l834:
  1120     0147  0852               	movf	binaryToDecimal@i+1,w
  1121     0148  3A80               	xorlw	128
  1122     0149  00FF               	movwf	btemp+1
  1123     014A  3080               	movlw	128
  1124     014B  027F               	subwf	btemp+1,w
  1125     014C  1D03               	skipz
  1126     014D  2950               	goto	u275
  1127     014E  3020               	movlw	32
  1128     014F  0251               	subwf	binaryToDecimal@i,w
  1129     0150                     u275:
  1130     0150  1C03               	skipc
  1131     0151  2953               	goto	u271
  1132     0152  2954               	goto	u270
  1133     0153                     u271:
  1134     0153  2901               	goto	l830
  1135     0154                     u270:
  1136     0154                     l836:
  1137                           
  1138                           ;Bibliotecas/IR_C.c: 16: return decimalValue;
  1139     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1140     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1141     0156  0850               	movf	binaryToDecimal@decimalValue+3,w
  1142     0157  00F7               	movwf	?_binaryToDecimal+3
  1143     0158  084F               	movf	binaryToDecimal@decimalValue+2,w
  1144     0159  00F6               	movwf	?_binaryToDecimal+2
  1145     015A  084E               	movf	binaryToDecimal@decimalValue+1,w
  1146     015B  00F5               	movwf	?_binaryToDecimal+1
  1147     015C  084D               	movf	binaryToDecimal@decimalValue,w
  1148     015D  00F4               	movwf	?_binaryToDecimal
  1149     015E                     l88:
  1150     015E  0008               	return
  1151     015F                     __end_of_binaryToDecimal:
  1152                           
  1153                           	psect	text3
  1154     01F3                     __ptext3:	
  1155 ;; *************** function _UART_Write_Text_ln *****************
  1156 ;; Defined at:
  1157 ;;		line 15 in file "Bibliotecas/EUSART_C.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  text            1    wreg     PTR const unsigned char 
  1160 ;;		 -> code(33), 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  text            1    9[COMMON] PTR const unsigned char 
  1163 ;;		 -> code(33), 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         1       0       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 3
  1180 ;; This function calls:
  1181 ;;		_UART_Write
  1182 ;;		_UART_Write_Text
  1183 ;; This function is called by:
  1184 ;;		_IR_Read
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188     01F3                     _UART_Write_Text_ln:	
  1189                           ;psect for function _UART_Write_Text_ln
  1190                           
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _UART_Write_Text_ln: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1194                           ;UART_Write_Text_ln@text stored from wreg
  1195     01F3  00F9               	movwf	UART_Write_Text_ln@text
  1196     01F4                     l816:
  1197                           
  1198                           ;Bibliotecas/EUSART_C.c: 16:     UART_Write_Text(text);
  1199     01F4  0879               	movf	UART_Write_Text_ln@text,w
  1200     01F5  120A  118A  21D2  120A  118A  	fcall	_UART_Write_Text
  1201     01FA                     l818:
  1202                           
  1203                           ;Bibliotecas/EUSART_C.c: 17:     UART_Write('\r');
  1204     01FA  300D               	movlw	13
  1205     01FB  120A  118A  221A  120A  118A  	fcall	_UART_Write
  1206     0200                     l820:
  1207                           
  1208                           ;Bibliotecas/EUSART_C.c: 18:     UART_Write('\n');
  1209     0200  300A               	movlw	10
  1210     0201  120A  118A  221A  120A  118A  	fcall	_UART_Write
  1211     0206                     l67:
  1212     0206  0008               	return
  1213     0207                     __end_of_UART_Write_Text_ln:
  1214                           
  1215                           	psect	text4
  1216     01D2                     __ptext4:	
  1217 ;; *************** function _UART_Write_Text *****************
  1218 ;; Defined at:
  1219 ;;		line 8 in file "Bibliotecas/EUSART_C.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  text            1    wreg     PTR const unsigned char 
  1222 ;;		 -> code(33), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  text            1    8[COMMON] PTR const unsigned char 
  1225 ;;		 -> code(33), 
  1226 ;;  i               2    6[COMMON] int 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       0       0       0       0
  1237 ;;      Locals:         3       0       0       0       0
  1238 ;;      Temps:          1       0       0       0       0
  1239 ;;      Totals:         4       0       0       0       0
  1240 ;;Total ram usage:        4 bytes
  1241 ;; Hardware stack levels used: 1
  1242 ;; Hardware stack levels required when called: 2
  1243 ;; This function calls:
  1244 ;;		_UART_Write
  1245 ;; This function is called by:
  1246 ;;		_UART_Write_Text_ln
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250     01D2                     _UART_Write_Text:	
  1251                           ;psect for function _UART_Write_Text
  1252                           
  1253                           
  1254                           ;incstack = 0
  1255                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1256                           ;UART_Write_Text@text stored from wreg
  1257     01D2  00F8               	movwf	UART_Write_Text@text
  1258     01D3                     l808:
  1259                           
  1260                           ;Bibliotecas/EUSART_C.c: 9:     int i;;Bibliotecas/EUSART_C.c: 10:     for(i=0;text[i]!=
      +                          '\0';i++){
  1261     01D3  01F6               	clrf	UART_Write_Text@i
  1262     01D4  01F7               	clrf	UART_Write_Text@i+1
  1263     01D5  29E7               	goto	l814
  1264     01D6                     l810:
  1265                           
  1266                           ;Bibliotecas/EUSART_C.c: 11:         UART_Write(text[i]);
  1267     01D6  0876               	movf	UART_Write_Text@i,w
  1268     01D7  0778               	addwf	UART_Write_Text@text,w
  1269     01D8  00F5               	movwf	??_UART_Write_Text
  1270     01D9  0875               	movf	??_UART_Write_Text,w
  1271     01DA  0084               	movwf	4
  1272     01DB  0800               	movf	0,w
  1273     01DC  120A  118A  221A  120A  118A  	fcall	_UART_Write
  1274     01E1                     l812:
  1275                           
  1276                           ;Bibliotecas/EUSART_C.c: 12:     }
  1277     01E1  3001               	movlw	1
  1278     01E2  07F6               	addwf	UART_Write_Text@i,f
  1279     01E3  1803               	skipnc
  1280     01E4  0AF7               	incf	UART_Write_Text@i+1,f
  1281     01E5  3000               	movlw	0
  1282     01E6  07F7               	addwf	UART_Write_Text@i+1,f
  1283     01E7                     l814:
  1284     01E7  0876               	movf	UART_Write_Text@i,w
  1285     01E8  0778               	addwf	UART_Write_Text@text,w
  1286     01E9  00F5               	movwf	??_UART_Write_Text
  1287     01EA  0875               	movf	??_UART_Write_Text,w
  1288     01EB  0084               	movwf	4
  1289     01EC  1383               	bcf	3,7	;select IRP bank0
  1290     01ED  0800               	movf	0,w
  1291     01EE  1D03               	btfss	3,2
  1292     01EF  29F1               	goto	u241
  1293     01F0  29F2               	goto	u240
  1294     01F1                     u241:
  1295     01F1  29D6               	goto	l810
  1296     01F2                     u240:
  1297     01F2                     l64:
  1298     01F2  0008               	return
  1299     01F3                     __end_of_UART_Write_Text:
  1300                           
  1301                           	psect	text5
  1302     021A                     __ptext5:	
  1303 ;; *************** function _UART_Write *****************
  1304 ;; Defined at:
  1305 ;;		line 3 in file "Bibliotecas/EUSART_C.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  data            1    wreg     const unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  data            1    4[COMMON] const unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         1       0       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_UART_Write_Text
  1330 ;;		_UART_Write_Text_ln
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     021A                     _UART_Write:	
  1335                           ;psect for function _UART_Write
  1336                           
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _UART_Write: [wreg]
  1340                           ;UART_Write@data stored from wreg
  1341     021A  00F4               	movwf	UART_Write@data
  1342     021B                     l804:
  1343     021B                     l55:	
  1344                           ;Bibliotecas/EUSART_C.c: 4:     while(!TRMT);
  1345                           
  1346     021B  1683               	bsf	3,5	;RP0=1, select bank1
  1347     021C  1303               	bcf	3,6	;RP1=0, select bank1
  1348     021D  1C98               	btfss	24,1	;volatile
  1349     021E  2A20               	goto	u231
  1350     021F  2A21               	goto	u230
  1351     0220                     u231:
  1352     0220  2A1B               	goto	l55
  1353     0221                     u230:
  1354     0221                     l806:
  1355                           
  1356                           ;Bibliotecas/EUSART_C.c: 5:     TXREG = data;
  1357     0221  0874               	movf	UART_Write@data,w
  1358     0222  1283               	bcf	3,5	;RP0=0, select bank0
  1359     0223  1303               	bcf	3,6	;RP1=0, select bank0
  1360     0224  0099               	movwf	25	;volatile
  1361     0225                     l58:
  1362     0225  0008               	return
  1363     0226                     __end_of_UART_Write:
  1364                           
  1365                           	psect	text6
  1366     015F                     __ptext6:	
  1367 ;; *************** function _global *****************
  1368 ;; Defined at:
  1369 ;;		line 21 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, btemp+1
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0
  1385 ;;      Temps:          4       0       0       0       0
  1386 ;;      Totals:         4       0       0       0       0
  1387 ;;Total ram usage:        4 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		Interrupt level 1
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396     015F                     _global:	
  1397                           ;psect for function _global
  1398                           
  1399     015F                     i1l916:
  1400                           
  1401                           ;main.c: 22:     if (INTF){
  1402     015F  1C8B               	btfss	11,1	;volatile
  1403     0160  2962               	goto	u40_21
  1404     0161  2963               	goto	u40_20
  1405     0162                     u40_21:
  1406     0162  2984               	goto	i1l40
  1407     0163                     u40_20:
  1408     0163                     i1l918:
  1409                           
  1410                           ;main.c: 23:         counter++;
  1411     0163  3001               	movlw	1
  1412     0164  00FF               	movwf	btemp+1
  1413     0165  087F               	movf	btemp+1,w
  1414     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0168  07E0               	addwf	_counter,f
  1417     0169                     i1l920:
  1418                           
  1419                           ;main.c: 24:         _delay((unsigned long)((100)*(20000000/4000000.0)));
  1420     0169  30A6               	movlw	166
  1421     016A  00F0               	movwf	??_global
  1422     016B                     u46_27:
  1423     016B  0BF0               	decfsz	??_global,f
  1424     016C  296B               	goto	u46_27
  1425     016D  0000               	nop
  1426     016E                     i1l922:
  1427                           
  1428                           ;main.c: 26:         if(PORTBbits.RB0 == 1 && trava == 0){
  1429     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1430     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1431     0170  1C06               	btfss	6,0	;volatile
  1432     0171  2973               	goto	u41_21
  1433     0172  2974               	goto	u41_20
  1434     0173                     u41_21:
  1435     0173  297A               	goto	i1l38
  1436     0174                     u41_20:
  1437     0174                     i1l924:
  1438     0174  085F               	movf	_trava,w
  1439     0175  1D03               	btfss	3,2
  1440     0176  2978               	goto	u42_21
  1441     0177  2979               	goto	u42_20
  1442     0178                     u42_21:
  1443     0178  297A               	goto	i1l38
  1444     0179                     u42_20:
  1445     0179                     i1l926:
  1446                           
  1447                           ;main.c: 27:             INTF = 0;
  1448     0179  108B               	bcf	11,1	;volatile
  1449     017A                     i1l38:	
  1450                           ;main.c: 28:         }
  1451                           
  1452                           
  1453                           ;main.c: 29:         if(PORTBbits.RB0 == 0 && trava != 0){
  1454     017A  1806               	btfsc	6,0	;volatile
  1455     017B  297D               	goto	u43_21
  1456     017C  297E               	goto	u43_20
  1457     017D                     u43_21:
  1458     017D  2984               	goto	i1l40
  1459     017E                     u43_20:
  1460     017E                     i1l928:
  1461     017E  085F               	movf	_trava,w
  1462     017F  1903               	btfsc	3,2
  1463     0180  2982               	goto	u44_21
  1464     0181  2983               	goto	u44_20
  1465     0182                     u44_21:
  1466     0182  2984               	goto	i1l40
  1467     0183                     u44_20:
  1468     0183                     i1l930:
  1469                           
  1470                           ;main.c: 30:             INTF = 0;
  1471     0183  108B               	bcf	11,1	;volatile
  1472     0184                     i1l40:
  1473     0184  0873               	movf	??_global+3,w
  1474     0185  00FF               	movwf	btemp+1
  1475     0186  0872               	movf	??_global+2,w
  1476     0187  008A               	movwf	10
  1477     0188  0E71               	swapf	??_global+1,w
  1478     0189  0083               	movwf	3
  1479     018A  0EFE               	swapf	btemp,f
  1480     018B  0E7E               	swapf	btemp,w
  1481     018C  0009               	retfie
  1482     018D                     __end_of_global:
  1483     007E                     btemp	set	126	;btemp
  1484     007E                     wtemp0	set	126
  1485                           
  1486                           	psect	intentry
  1487     0004                     __pintentry:	
  1488                           ;incstack = 0
  1489                           ; Regs used in _global: [wreg+status,2+status,0+btemp+1]
  1490                           
  1491     0004                     interrupt_function:
  1492     007E                     saved_w	set	btemp
  1493     0004  00FE               	movwf	btemp
  1494     0005  0E03               	swapf	3,w
  1495     0006  00F1               	movwf	??_global+1
  1496     0007  080A               	movf	10,w
  1497     0008  00F2               	movwf	??_global+2
  1498     0009  087F               	movf	btemp+1,w
  1499     000A  00F3               	movwf	??_global+3
  1500     000B  120A  118A  295F   	ljmp	_global
  1501                           
  1502                           	psect	idloc
  1503                           
  1504                           ;Config register IDLOC0 @ 0x2000
  1505                           ;	unspecified, using default values
  1506     2000                     	org	8192
  1507     2000  3FFF               	dw	16383
  1508                           
  1509                           ;Config register IDLOC1 @ 0x2001
  1510                           ;	unspecified, using default values
  1511     2001                     	org	8193
  1512     2001  3FFF               	dw	16383
  1513                           
  1514                           ;Config register IDLOC2 @ 0x2002
  1515                           ;	unspecified, using default values
  1516     2002                     	org	8194
  1517     2002  3FFF               	dw	16383
  1518                           
  1519                           ;Config register IDLOC3 @ 0x2003
  1520                           ;	unspecified, using default values
  1521     2003                     	org	8195
  1522     2003  3FFF               	dw	16383
  1523                           
  1524                           	psect	config
  1525                           
  1526                           ;Config register CONFIG @ 0x2007
  1527                           ;	Oscillator Selection bits
  1528                           ;	FOSC = HS, HS oscillator
  1529                           ;	Watchdog Timer Enable bit
  1530                           ;	WDTE = OFF, WDT disabled
  1531                           ;	Power-up Timer Enable bit
  1532                           ;	PWRTE = OFF, PWRT disabled
  1533                           ;	Brown-out Reset Enable bit
  1534                           ;	BOREN = OFF, BOR disabled
  1535                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1536                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1537                           ;	Data EEPROM Memory Code Protection bit
  1538                           ;	CPD = OFF, Data EEPROM code protection off
  1539                           ;	Flash Program Memory Write Enable bits
  1540                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1541                           ;	In-Circuit Debugger Mode bit
  1542                           ;	DEBUG = 0x1, unprogrammed default
  1543                           ;	Flash Program Memory Code Protection bit
  1544                           ;	CP = OFF, Code protection off
  1545     2007                     	org	8199
  1546     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     25      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    binaryToDecimal@binaryVector	PTR const unsigned char  size(1) Largest target is 33
		 -> code(BANK0[33]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 33
		 -> code(BANK0[33]), 

    UART_Write_Text_ln@text	PTR const unsigned char  size(1) Largest target is 33
		 -> code(BANK0[33]), 


Critical Paths under _main in COMMON

    _IR_Read->_UART_Write_Text_ln
    _UART_Write_Text_ln->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _global in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_IR_Read
    _IR_Read->_binaryToDecimal

Critical Paths under _global in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _global in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     527
                            _IR_Read
 ---------------------------------------------------------------------------------
 (1) _IR_Read                                              7     7      0     527
                                             18 BANK0      7     7      0
                 _UART_Write_Text_ln
                    _binaryToDecimal
 ---------------------------------------------------------------------------------
 (2) _binaryToDecimal                                     22    18      4     169
                                              4 COMMON     4     0      4
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text_ln                                   1     1      0     222
                                              9 COMMON     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (3) _UART_Write_Text                                      4     4      0     145
                                              5 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _global                                               4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IR_Read
     _UART_Write_Text_ln
       _UART_Write
       _UART_Write_Text
         _UART_Write
     _binaryToDecimal

 _global (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 16:22:39 2024

                          pc 0002                           l55 021B                           l64 01F2  
                         l58 0225                           l67 0206                           l88 015E  
                         l96 00F3                           fsr 0004                          l106 00F3  
                        l810 01D6                          l804 021B                          l812 01E1  
                        l820 0200                          l806 0221                          l814 01E7  
                        l830 0101                          l822 00F7                          l910 00CD  
                        l808 01D3                          l816 01F4                          l832 0141  
                        l824 00FF                          l912 00DD                          l904 00C1  
                        l840 002A                          l818 01FA                          l834 0147  
                        l914 00E3                          l906 00C7                          l842 0032  
                        l850 0043                          l836 0154                          l908 00CA  
                        l860 0052                          l852 0049                          l844 0038  
                        l940 0194                          l932 018D                          l862 005A  
                        l854 004F                          l846 003B                          l950 019D  
                        l942 0195                          l934 0191                          l880 0093  
                        l864 0060                          l848 0041                          l952 01A4  
                        l944 0198                          l936 0192                          l882 0099  
                        l874 0077                          l866 006E                          l954 01A7  
                        l946 0199                          l938 0193                          l884 009F  
                        l892 00AE                          l876 007F                          l868 0074  
                        l956 01A8                          l948 019A                          l894 00B4  
                        l886 00A5                          l878 0085                          l896 00BA  
                        l888 00A9                          u300 0049                          u301 0048  
                        u230 0221                          u310 004F                          u231 0220  
                        u311 004E                          u240 01F2                          u320 006D  
                        u241 01F1                          u321 006C                          u250 0124  
                        u330 0074                          u331 0073                          u260 012E  
                        u340 0092                          u261 012F                          u341 0091  
                        u325 0069                          u270 0154                          u262 0134  
                        u350 0099                          u271 0153                          u263 0135  
                        u255 011F                          u351 0098                          u360 009F  
                        u280 0032                          u361 009E                          u345 008E  
                        u281 0031                          u370 00B4                          u290 0038  
                        u275 0150                          u371 00B3                          u291 0037  
                        u380 00BA                          u381 00B9                          u390 00C7  
                        u391 00C6                          u457 00EB                          fsr0 0004  
                        indf 0000                         _INTF 0059                         i1l40 0184  
                       i1l38 017A                         _TRMT 04C1              __end_of_IR_Read 00F4  
                       _code 0020                         _main 018D                         btemp 007E  
                       start 000E      __end_of_UART_Write_Text 01F3                        ?_main 0070  
                      _CMCON 009C                        i1l920 0169                        i1l930 0183  
                      i1l922 016E                        i1l924 0174                        i1l916 015F  
                      i1l926 0179                        i1l918 0163                        i1l928 017E  
                      u40_20 0163                        u40_21 0162                        u41_20 0174  
                      u41_21 0173                        u42_20 0179                        u42_21 0178  
                      _SPBRG 0099                        u43_20 017E                        u43_21 017D  
                      _PORTB 0006                        _PORTC 0007                        u44_20 0183  
                      u44_21 0182                        u46_27 016B                        _TRISB 0086  
                      _TRISC 0087                        _TXREG 0019                  ?_UART_Write 0070  
                      _trava 005F                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 0011                 __end_of_main 01B1  
                     ??_main 007A                    ??_IR_Read 0053             ?_UART_Write_Text 0070  
                     _global 015F                       saved_w 007E                 _decimalValue 005A  
    __end_of__initialization 0026               __pcstackCOMMON 0070                 __pidataBANK0 01B1  
             _OPTION_REGbits 0081                   __pbssBANK0 005A                   __pmaintext 018D  
                 _code_count 005E                   __pintentry 0004                      ?_global 0070  
 __end_of_UART_Write_Text_ln 0207                 ??_UART_Write 0074                      _IR_Read 002A  
         __end_of_UART_Write 0226                      __ptext1 002A                      __ptext2 00F4  
                    __ptext3 01F3                      __ptext4 01D2                      __ptext5 021A  
                    __ptext6 015F                      _counter 0060            ??_binaryToDecimal 0041  
binaryToDecimal@decimalValue 004D         end_of_initialization 0026                    _RCSTAbits 0018  
                  _PORTBbits 0006               UART_Write@data 0074                    _TXSTAbits 0098  
binaryToDecimal@binaryVector 004C               __end_of_global 018D          start_initialization 0011  
                 init_fetch0 0207                  __pdataBANK0 0020                     ??_global 0070  
                  ___latbits 0002                __pcstackBANK0 0041                     ?_IR_Read 0070  
         _UART_Write_Text_ln 01F3          ?_UART_Write_Text_ln 0070              _binaryToDecimal 00F4  
                   IR_Read@i 0056         ??_UART_Write_Text_ln 0079            ??_UART_Write_Text 0075  
          interrupt_function 0004      __end_of_binaryToDecimal 015F                 IR_Read@i_289 0058  
        UART_Write_Text@text 0078             binaryToDecimal@i 0051       UART_Write_Text_ln@text 0079  
                 _INTCONbits 000B                     init_ram0 020B                     intlevel1 0000  
           ?_binaryToDecimal 0074              _UART_Write_Text 01D2                   _UART_Write 021A  
           UART_Write_Text@i 0076  
