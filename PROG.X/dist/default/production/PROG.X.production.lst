

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 13:06:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0008                     	;# 
   247     0009                     	;# 
   248     000A                     	;# 
   249     000B                     	;# 
   250     000C                     	;# 
   251     000D                     	;# 
   252     000E                     	;# 
   253     000E                     	;# 
   254     000F                     	;# 
   255     0010                     	;# 
   256     0011                     	;# 
   257     0012                     	;# 
   258     0013                     	;# 
   259     0014                     	;# 
   260     0015                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001D                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     0081                     	;# 
   274     0085                     	;# 
   275     0086                     	;# 
   276     0087                     	;# 
   277     0088                     	;# 
   278     0089                     	;# 
   279     008C                     	;# 
   280     008D                     	;# 
   281     008E                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298                           
   299                           	psect	idataBANK0
   300     01B1                     __pidataBANK0:
   301                           
   302                           ;initializer for _code
   303     01B1  3430               	retlw	48
   304     01B2  3430               	retlw	48
   305     01B3  3430               	retlw	48
   306     01B4  3430               	retlw	48
   307     01B5  3430               	retlw	48
   308     01B6  3430               	retlw	48
   309     01B7  3430               	retlw	48
   310     01B8  3430               	retlw	48
   311     01B9  3431               	retlw	49
   312     01BA  3431               	retlw	49
   313     01BB  3431               	retlw	49
   314     01BC  3431               	retlw	49
   315     01BD  3431               	retlw	49
   316     01BE  3431               	retlw	49
   317     01BF  3431               	retlw	49
   318     01C0  3431               	retlw	49
   319     01C1  3430               	retlw	48
   320     01C2  3430               	retlw	48
   321     01C3  3430               	retlw	48
   322     01C4  3430               	retlw	48
   323     01C5  3430               	retlw	48
   324     01C6  3430               	retlw	48
   325     01C7  3430               	retlw	48
   326     01C8  3430               	retlw	48
   327     01C9  3431               	retlw	49
   328     01CA  3431               	retlw	49
   329     01CB  3431               	retlw	49
   330     01CC  3431               	retlw	49
   331     01CD  3431               	retlw	49
   332     01CE  3431               	retlw	49
   333     01CF  3431               	retlw	49
   334     01D0  3431               	retlw	49
   335     01D1  3400               	retlw	0
   336     001A                     _RCREG	set	26
   337     0019                     _TXREG	set	25
   338     0007                     _PORTC	set	7
   339     0006                     _PORTB	set	6
   340     0018                     _RCSTAbits	set	24
   341     000B                     _INTCONbits	set	11
   342     0006                     _PORTBbits	set	6
   343     0065                     _RCIF	set	101
   344     0059                     _INTF	set	89
   345     0087                     _TRISC	set	135
   346     0086                     _TRISB	set	134
   347     0098                     _TXSTAbits	set	152
   348     0099                     _SPBRG	set	153
   349     0081                     _OPTION_REGbits	set	129
   350     009C                     _CMCON	set	156
   351     04C1                     _TRMT	set	1217
   352                           
   353                           	psect	cinit
   354     0011                     start_initialization:	
   355                           ; #config settings
   356                           
   357     0011                     __initialization:
   358                           
   359                           ; Initialize objects allocated to BANK0
   360     0011  1383               	bcf	3,7	;select IRP bank0
   361     0012  3041               	movlw	low (__pdataBANK0+33)
   362     0013  00FD               	movwf	btemp+-1
   363     0014  3001               	movlw	high __pidataBANK0
   364     0015  00FE               	movwf	btemp
   365     0016  30B1               	movlw	low __pidataBANK0
   366     0017  00FF               	movwf	btemp+1
   367     0018  3020               	movlw	low __pdataBANK0
   368     0019  0084               	movwf	4
   369     001A  120A  118A  220B  120A  118A  	fcall	init_ram0
   370                           
   371                           ; Clear objects allocated to BANK0
   372     001F  01DA               	clrf	__pbssBANK0& (0+127)
   373     0020  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   374     0021  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   375     0022  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   376     0023  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   377     0024  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   378     0025  01E0               	clrf	(__pbssBANK0+6)& (0+127)
   379     0026                     end_of_initialization:	
   380                           ;End of C runtime variable initialization code
   381                           
   382     0026                     __end_of__initialization:
   383     0026  0183               	clrf	3
   384     0027  120A  118A  298D   	ljmp	_main	;jump to C main() function
   385                           
   386                           	psect	bssBANK0
   387     005A                     __pbssBANK0:
   388     005A                     _decimalValue:
   389     005A                     	ds	4
   390     005E                     _code_count:
   391     005E                     	ds	1
   392     005F                     _trava:
   393     005F                     	ds	1
   394     0060                     _counter:
   395     0060                     	ds	1
   396                           
   397                           	psect	dataBANK0
   398     0020                     __pdataBANK0:
   399     0020                     _code:
   400     0020                     	ds	33
   401                           
   402                           	psect	inittext
   403     0207                     init_fetch0:	
   404                           ;	Called with low address in FSR and high address in W
   405                           
   406     0207  087E               	movf	btemp,w
   407     0208  008A               	movwf	10
   408     0209  087F               	movf	btemp+1,w
   409     020A  0082               	movwf	2
   410     020B                     init_ram0:	
   411                           ;Called with:
   412                           ;	high address of idata address in btemp 
   413                           ;	low address of idata address in btemp+1 
   414                           ;	low address of data in FSR
   415                           ;	high address + 1 of data in btemp-1
   416                           
   417     020B  120A  118A  2207  120A  118A  	fcall	init_fetch0
   418     0210  0080               	movwf	0
   419     0211  0A84               	incf	4,f
   420     0212  0804               	movf	4,w
   421     0213  067D               	xorwf	btemp+-1,w
   422     0214  1903               	btfsc	3,2
   423     0215  3400               	retlw	0
   424     0216  0AFF               	incf	btemp+1,f
   425     0217  1903               	btfsc	3,2
   426     0218  0AFE               	incf	btemp,f
   427     0219  2A0B               	goto	init_ram0
   428                           
   429                           	psect	cstackCOMMON
   430     0070                     __pcstackCOMMON:
   431     0070                     ?_IR_Read:
   432     0070                     ?_global:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ??_global:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_UART_Write:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_UART_Write_Text:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_UART_Write_Text_ln:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452     0070                     	ds	4
   453     0074                     ??_UART_Write:
   454     0074                     ?_binaryToDecimal:	
   455                           ; 1 bytes @ 0x4
   456                           
   457     0074                     UART_Write@data:	
   458                           ; 4 bytes @ 0x4
   459                           
   460                           
   461                           ; 1 bytes @ 0x4
   462     0074                     	ds	1
   463     0075                     ??_UART_Write_Text:
   464                           
   465                           ; 1 bytes @ 0x5
   466     0075                     	ds	1
   467     0076                     UART_Write_Text@i:
   468                           
   469                           ; 2 bytes @ 0x6
   470     0076                     	ds	2
   471     0078                     UART_Write_Text@text:
   472                           
   473                           ; 1 bytes @ 0x8
   474     0078                     	ds	1
   475     0079                     ??_UART_Write_Text_ln:
   476     0079                     UART_Write_Text_ln@text:	
   477                           ; 1 bytes @ 0x9
   478                           
   479                           
   480                           ; 1 bytes @ 0x9
   481     0079                     	ds	1
   482     007A                     ??_main:
   483                           
   484                           	psect	cstackBANK0
   485     0041                     __pcstackBANK0:	
   486                           ; 1 bytes @ 0xA
   487                           
   488     0041                     ??_binaryToDecimal:
   489                           
   490                           ; 1 bytes @ 0x0
   491     0041                     	ds	11
   492     004C                     binaryToDecimal@binaryVector:
   493                           
   494                           ; 1 bytes @ 0xB
   495     004C                     	ds	1
   496     004D                     binaryToDecimal@decimalValue:
   497                           
   498                           ; 4 bytes @ 0xC
   499     004D                     	ds	4
   500     0051                     binaryToDecimal@i:
   501                           
   502                           ; 2 bytes @ 0x10
   503     0051                     	ds	2
   504     0053                     ??_IR_Read:
   505                           
   506                           ; 1 bytes @ 0x12
   507     0053                     	ds	3
   508     0056                     IR_Read@i:
   509                           
   510                           ; 2 bytes @ 0x15
   511     0056                     	ds	2
   512     0058                     IR_Read@i_299:
   513                           
   514                           ; 2 bytes @ 0x17
   515     0058                     	ds	2
   516                           
   517                           	psect	maintext
   518     018D                     __pmaintext:	
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 35 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : B00/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels required when called: 5
   544 ;; This function calls:
   545 ;;		_IR_Read
   546 ;; This function is called by:
   547 ;;		Startup code after reset
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551     018D                     _main:	
   552                           ;psect for function _main
   553                           
   554     018D                     l972:	
   555                           ;incstack = 0
   556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   557                           
   558                           
   559                           ;main.c: 36:     CMCON = 0x07;
   560     018D  3007               	movlw	7
   561     018E  1683               	bsf	3,5	;RP0=1, select bank1
   562     018F  1303               	bcf	3,6	;RP1=0, select bank1
   563     0190  009C               	movwf	28	;volatile
   564     0191                     l974:
   565                           
   566                           ;main.c: 39:     INTCONbits.GIE = 0x01;
   567     0191  178B               	bsf	11,7	;volatile
   568     0192                     l976:
   569                           
   570                           ;main.c: 40:     INTCONbits.PEIE = 0x00;
   571     0192  130B               	bcf	11,6	;volatile
   572     0193                     l978:
   573                           
   574                           ;main.c: 41:     INTCONbits.INTE = 0x01;
   575     0193  160B               	bsf	11,4	;volatile
   576     0194                     l980:
   577                           
   578                           ;main.c: 42:     INTCONbits.INTF = 0x00;
   579     0194  108B               	bcf	11,1	;volatile
   580     0195                     l982:
   581                           
   582                           ;main.c: 43:     OPTION_REGbits.INTEDG = 0x00;
   583     0195  1301               	bcf	1,6	;volatile
   584                           
   585                           ;main.c: 46:     SPBRG = 31;
   586     0196  301F               	movlw	31
   587     0197  0099               	movwf	25	;volatile
   588     0198                     l984:
   589                           
   590                           ;main.c: 47:     TXSTAbits.SYNC = 0;
   591     0198  1218               	bcf	24,4	;volatile
   592     0199                     l986:
   593                           
   594                           ;main.c: 48:     TXSTAbits.TXEN = 1;
   595     0199  1698               	bsf	24,5	;volatile
   596     019A                     l988:
   597                           
   598                           ;main.c: 49:     RCSTAbits.SPEN = 1;
   599     019A  1283               	bcf	3,5	;RP0=0, select bank0
   600     019B  1303               	bcf	3,6	;RP1=0, select bank0
   601     019C  1798               	bsf	24,7	;volatile
   602     019D                     l990:
   603                           
   604                           ;main.c: 50:     RCSTAbits.CREN = 1;
   605     019D  1618               	bsf	24,4	;volatile
   606                           
   607                           ;main.c: 53:     TRISB = 0x01;
   608     019E  3001               	movlw	1
   609     019F  1683               	bsf	3,5	;RP0=1, select bank1
   610     01A0  1303               	bcf	3,6	;RP1=0, select bank1
   611     01A1  0086               	movwf	6	;volatile
   612                           
   613                           ;main.c: 54:     TRISC = 0x80;
   614     01A2  3080               	movlw	128
   615     01A3  0087               	movwf	7	;volatile
   616     01A4                     l992:
   617                           
   618                           ;main.c: 55:     PORTB = 0x00;
   619     01A4  1283               	bcf	3,5	;RP0=0, select bank0
   620     01A5  1303               	bcf	3,6	;RP1=0, select bank0
   621     01A6  0186               	clrf	6	;volatile
   622     01A7                     l994:
   623                           
   624                           ;main.c: 56:     PORTC = 0x00;
   625     01A7  0187               	clrf	7	;volatile
   626     01A8                     l996:
   627                           
   628                           ;main.c: 59:         IR_Read();
   629     01A8  120A  118A  202A  120A  118A  	fcall	_IR_Read
   630     01AD  29A8               	goto	l996
   631     01AE  120A  118A  280E   	ljmp	start
   632     01B1                     __end_of_main:
   633                           
   634                           	psect	text1
   635     002A                     __ptext1:	
   636 ;; *************** function _IR_Read *****************
   637 ;; Defined at:
   638 ;;		line 19 in file "Bibliotecas/IR_C.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  i               2   23[BANK0 ] int 
   643 ;;  i               2   21[BANK0 ] int 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       4       0       0       0
   655 ;;      Temps:          0       3       0       0       0
   656 ;;      Totals:         0       7       0       0       0
   657 ;;Total ram usage:        7 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 4
   660 ;; This function calls:
   661 ;;		_UART_Write_Text_ln
   662 ;;		_binaryToDecimal
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668     002A                     _IR_Read:	
   669                           ;psect for function _IR_Read
   670                           
   671     002A                     l880:	
   672                           ;incstack = 0
   673                           ; Regs used in _IR_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   674                           
   675                           
   676                           ;Bibliotecas/IR_C.c: 20:     if(counter >= 80 && counter <= 100){
   677     002A  3050               	movlw	80
   678     002B  1283               	bcf	3,5	;RP0=0, select bank0
   679     002C  1303               	bcf	3,6	;RP1=0, select bank0
   680     002D  0260               	subwf	_counter,w
   681     002E  1C03               	skipc
   682     002F  2831               	goto	u311
   683     0030  2832               	goto	u310
   684     0031                     u311:
   685     0031  2843               	goto	l890
   686     0032                     u310:
   687     0032                     l882:
   688     0032  3065               	movlw	101
   689     0033  0260               	subwf	_counter,w
   690     0034  1803               	skipnc
   691     0035  2837               	goto	u321
   692     0036  2838               	goto	u320
   693     0037                     u321:
   694     0037  2843               	goto	l890
   695     0038                     u320:
   696     0038                     l884:
   697                           
   698                           ;Bibliotecas/IR_C.c: 22:         OPTION_REGbits.INTEDG = 1;
   699     0038  1683               	bsf	3,5	;RP0=1, select bank1
   700     0039  1303               	bcf	3,6	;RP1=0, select bank1
   701     003A  1701               	bsf	1,6	;volatile
   702     003B                     l886:
   703                           
   704                           ;Bibliotecas/IR_C.c: 23:         trava++;
   705     003B  3001               	movlw	1
   706     003C  00FF               	movwf	btemp+1
   707     003D  087F               	movf	btemp+1,w
   708     003E  1283               	bcf	3,5	;RP0=0, select bank0
   709     003F  1303               	bcf	3,6	;RP1=0, select bank0
   710     0040  07DF               	addwf	_trava,f
   711     0041                     l888:
   712                           
   713                           ;Bibliotecas/IR_C.c: 24:         counter = 0x00;
   714     0041  01E0               	clrf	_counter
   715                           
   716                           ;Bibliotecas/IR_C.c: 25:     }
   717     0042  28F3               	goto	l124
   718     0043                     l890:
   719     0043  301A               	movlw	26
   720     0044  0260               	subwf	_counter,w
   721     0045  1C03               	skipc
   722     0046  2848               	goto	u331
   723     0047  2849               	goto	u330
   724     0048                     u331:
   725     0048  286E               	goto	l906
   726     0049                     u330:
   727     0049                     l892:
   728     0049  3050               	movlw	80
   729     004A  0260               	subwf	_counter,w
   730     004B  1803               	skipnc
   731     004C  284E               	goto	u341
   732     004D  284F               	goto	u340
   733     004E                     u341:
   734     004E  286E               	goto	l906
   735     004F                     u340:
   736     004F                     l894:
   737                           
   738                           ;Bibliotecas/IR_C.c: 28:         counter = 0x00;
   739     004F  01E0               	clrf	_counter
   740                           
   741                           ;Bibliotecas/IR_C.c: 29:         for(int i = 0; i < 31; i++){
   742     0050  01D6               	clrf	IR_Read@i
   743     0051  01D7               	clrf	IR_Read@i+1
   744     0052                     l900:
   745                           
   746                           ;Bibliotecas/IR_C.c: 30:             code[i] = '0';
   747     0052  1283               	bcf	3,5	;RP0=0, select bank0
   748     0053  1303               	bcf	3,6	;RP1=0, select bank0
   749     0054  0856               	movf	IR_Read@i,w
   750     0055  3E20               	addlw	(low (_code| 0))& (0+255)
   751     0056  0084               	movwf	4
   752     0057  3030               	movlw	48
   753     0058  1383               	bcf	3,7	;select IRP bank0
   754     0059  0080               	movwf	0
   755     005A                     l902:
   756                           
   757                           ;Bibliotecas/IR_C.c: 31:         }
   758     005A  3001               	movlw	1
   759     005B  07D6               	addwf	IR_Read@i,f
   760     005C  1803               	skipnc
   761     005D  0AD7               	incf	IR_Read@i+1,f
   762     005E  3000               	movlw	0
   763     005F  07D7               	addwf	IR_Read@i+1,f
   764     0060                     l904:
   765     0060  0857               	movf	IR_Read@i+1,w
   766     0061  3A80               	xorlw	128
   767     0062  00FF               	movwf	btemp+1
   768     0063  3080               	movlw	128
   769     0064  027F               	subwf	btemp+1,w
   770     0065  1D03               	skipz
   771     0066  2869               	goto	u355
   772     0067  301F               	movlw	31
   773     0068  0256               	subwf	IR_Read@i,w
   774     0069                     u355:
   775     0069  1C03               	skipc
   776     006A  286C               	goto	u351
   777     006B  286D               	goto	u350
   778     006C                     u351:
   779     006C  2852               	goto	l900
   780     006D                     u350:
   781     006D  28F3               	goto	l124
   782     006E                     l906:
   783     006E  3065               	movlw	101
   784     006F  0260               	subwf	_counter,w
   785     0070  1C03               	skipc
   786     0071  2873               	goto	u361
   787     0072  2874               	goto	u360
   788     0073                     u361:
   789     0073  2893               	goto	l920
   790     0074                     u360:
   791     0074                     l908:
   792                           
   793                           ;Bibliotecas/IR_C.c: 35:         counter = 0x00;
   794     0074  01E0               	clrf	_counter
   795                           
   796                           ;Bibliotecas/IR_C.c: 36:         for(int i = 0; i < 31; i++){
   797     0075  01D8               	clrf	IR_Read@i_299
   798     0076  01D9               	clrf	IR_Read@i_299+1
   799     0077                     l914:
   800                           
   801                           ;Bibliotecas/IR_C.c: 37:             code[i] = '0';
   802     0077  1283               	bcf	3,5	;RP0=0, select bank0
   803     0078  1303               	bcf	3,6	;RP1=0, select bank0
   804     0079  0858               	movf	IR_Read@i_299,w
   805     007A  3E20               	addlw	(low (_code| 0))& (0+255)
   806     007B  0084               	movwf	4
   807     007C  3030               	movlw	48
   808     007D  1383               	bcf	3,7	;select IRP bank0
   809     007E  0080               	movwf	0
   810     007F                     l916:
   811                           
   812                           ;Bibliotecas/IR_C.c: 38:         }
   813     007F  3001               	movlw	1
   814     0080  07D8               	addwf	IR_Read@i_299,f
   815     0081  1803               	skipnc
   816     0082  0AD9               	incf	IR_Read@i_299+1,f
   817     0083  3000               	movlw	0
   818     0084  07D9               	addwf	IR_Read@i_299+1,f
   819     0085                     l918:
   820     0085  0859               	movf	IR_Read@i_299+1,w
   821     0086  3A80               	xorlw	128
   822     0087  00FF               	movwf	btemp+1
   823     0088  3080               	movlw	128
   824     0089  027F               	subwf	btemp+1,w
   825     008A  1D03               	skipz
   826     008B  288E               	goto	u375
   827     008C  301F               	movlw	31
   828     008D  0258               	subwf	IR_Read@i_299,w
   829     008E                     u375:
   830     008E  1C03               	skipc
   831     008F  2891               	goto	u371
   832     0090  2892               	goto	u370
   833     0091                     u371:
   834     0091  2877               	goto	l914
   835     0092                     u370:
   836     0092  28F3               	goto	l124
   837     0093                     l920:
   838     0093  3004               	movlw	4
   839     0094  0260               	subwf	_counter,w
   840     0095  1C03               	skipc
   841     0096  2898               	goto	u381
   842     0097  2899               	goto	u380
   843     0098                     u381:
   844     0098  28AE               	goto	l932
   845     0099                     u380:
   846     0099                     l922:
   847     0099  3009               	movlw	9
   848     009A  0260               	subwf	_counter,w
   849     009B  1803               	skipnc
   850     009C  289E               	goto	u391
   851     009D  289F               	goto	u390
   852     009E                     u391:
   853     009E  28AE               	goto	l932
   854     009F                     u390:
   855     009F                     l924:
   856                           
   857                           ;Bibliotecas/IR_C.c: 42:         code[code_count] = '0';
   858     009F  085E               	movf	_code_count,w
   859     00A0  3E20               	addlw	(low (_code| 0))& (0+255)
   860     00A1  0084               	movwf	4
   861     00A2  3030               	movlw	48
   862     00A3  1383               	bcf	3,7	;select IRP bank0
   863     00A4  0080               	movwf	0
   864     00A5                     l926:
   865                           
   866                           ;Bibliotecas/IR_C.c: 43:         trava++;
   867     00A5  3001               	movlw	1
   868     00A6  00FF               	movwf	btemp+1
   869     00A7  087F               	movf	btemp+1,w
   870     00A8  07DF               	addwf	_trava,f
   871     00A9                     l928:
   872                           
   873                           ;Bibliotecas/IR_C.c: 44:         code_count++;
   874     00A9  3001               	movlw	1
   875     00AA  00FF               	movwf	btemp+1
   876     00AB  087F               	movf	btemp+1,w
   877     00AC  07DE               	addwf	_code_count,f
   878     00AD  2841               	goto	l888
   879     00AE                     l932:
   880     00AE  3009               	movlw	9
   881     00AF  0260               	subwf	_counter,w
   882     00B0  1C03               	skipc
   883     00B1  28B3               	goto	u401
   884     00B2  28B4               	goto	u400
   885     00B3                     u401:
   886     00B3  28C1               	goto	l944
   887     00B4                     u400:
   888     00B4                     l934:
   889     00B4  301A               	movlw	26
   890     00B5  0260               	subwf	_counter,w
   891     00B6  1803               	skipnc
   892     00B7  28B9               	goto	u411
   893     00B8  28BA               	goto	u410
   894     00B9                     u411:
   895     00B9  28C1               	goto	l944
   896     00BA                     u410:
   897     00BA                     l936:
   898                           
   899                           ;Bibliotecas/IR_C.c: 49:         code[code_count] = '1';
   900     00BA  085E               	movf	_code_count,w
   901     00BB  3E20               	addlw	(low (_code| 0))& (0+255)
   902     00BC  0084               	movwf	4
   903     00BD  3031               	movlw	49
   904     00BE  1383               	bcf	3,7	;select IRP bank0
   905     00BF  0080               	movwf	0
   906     00C0  28A5               	goto	l926
   907     00C1                     l944:
   908     00C1  3020               	movlw	32
   909     00C2  065E               	xorwf	_code_count,w
   910     00C3  1D03               	btfss	3,2
   911     00C4  28C6               	goto	u421
   912     00C5  28C7               	goto	u420
   913     00C6                     u421:
   914     00C6  28F3               	goto	l114
   915     00C7                     u420:
   916     00C7                     l946:
   917                           
   918                           ;Bibliotecas/IR_C.c: 55:         trava = 0x00;
   919     00C7  01DF               	clrf	_trava
   920                           
   921                           ;Bibliotecas/IR_C.c: 56:         counter = 0x00;
   922     00C8  01E0               	clrf	_counter
   923                           
   924                           ;Bibliotecas/IR_C.c: 57:         code_count = 0x00;
   925     00C9  01DE               	clrf	_code_count
   926     00CA                     l948:
   927                           
   928                           ;Bibliotecas/IR_C.c: 58:         OPTION_REGbits.INTEDG = 0;
   929     00CA  1683               	bsf	3,5	;RP0=1, select bank1
   930     00CB  1303               	bcf	3,6	;RP1=0, select bank1
   931     00CC  1301               	bcf	1,6	;volatile
   932     00CD                     l950:
   933                           
   934                           ;Bibliotecas/IR_C.c: 60:         decimalValue = binaryToDecimal(code);
   935     00CD  3020               	movlw	(low (_code| 0))& (0+255)
   936     00CE  120A  118A  20F4  120A  118A  	fcall	_binaryToDecimal
   937     00D3  0877               	movf	?_binaryToDecimal+3,w
   938     00D4  1283               	bcf	3,5	;RP0=0, select bank0
   939     00D5  1303               	bcf	3,6	;RP1=0, select bank0
   940     00D6  00DD               	movwf	_decimalValue+3
   941     00D7  0876               	movf	?_binaryToDecimal+2,w
   942     00D8  00DC               	movwf	_decimalValue+2
   943     00D9  0875               	movf	?_binaryToDecimal+1,w
   944     00DA  00DB               	movwf	_decimalValue+1
   945     00DB  0874               	movf	?_binaryToDecimal,w
   946     00DC  00DA               	movwf	_decimalValue
   947     00DD                     l952:
   948                           
   949                           ;Bibliotecas/IR_C.c: 61:         UART_Write_Text_ln(code);
   950     00DD  3020               	movlw	(low (_code| 0))& (0+255)
   951     00DE  120A  118A  21F3  120A  118A  	fcall	_UART_Write_Text_ln
   952     00E3                     l954:
   953                           
   954                           ;Bibliotecas/IR_C.c: 63:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   955     00E3  301A               	movlw	26
   956     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   957     00E5  1303               	bcf	3,6	;RP1=0, select bank0
   958     00E6  00D5               	movwf	??_IR_Read+2
   959     00E7  305E               	movlw	94
   960     00E8  00D4               	movwf	??_IR_Read+1
   961     00E9  306D               	movlw	109
   962     00EA  00D3               	movwf	??_IR_Read
   963     00EB                     u487:
   964     00EB  0BD3               	decfsz	??_IR_Read,f
   965     00EC  28EB               	goto	u487
   966     00ED  0BD4               	decfsz	??_IR_Read+1,f
   967     00EE  28EB               	goto	u487
   968     00EF  0BD5               	decfsz	??_IR_Read+2,f
   969     00F0  28EB               	goto	u487
   970     00F1  28F2               	nop2
   971     00F2  28F3               	goto	l124
   972     00F3                     l114:
   973     00F3                     l124:
   974     00F3  0008               	return
   975     00F4                     __end_of_IR_Read:
   976                           
   977                           	psect	text2
   978     00F4                     __ptext2:	
   979 ;; *************** function _binaryToDecimal *****************
   980 ;; Defined at:
   981 ;;		line 10 in file "Bibliotecas/IR_C.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  binaryVector    1    wreg     PTR const unsigned char 
   984 ;;		 -> code(33), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  binaryVector    1   11[BANK0 ] PTR const unsigned char 
   987 ;;		 -> code(33), 
   988 ;;  i               2   16[BANK0 ] int 
   989 ;;  decimalValue    4   12[BANK0 ] unsigned long 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  4    4[COMMON] unsigned long 
   992 ;; Registers used:
   993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         4       0       0       0       0
  1000 ;;      Locals:         0       7       0       0       0
  1001 ;;      Temps:          0      11       0       0       0
  1002 ;;      Totals:         4      18       0       0       0
  1003 ;;Total ram usage:       22 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_IR_Read
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013     00F4                     _binaryToDecimal:	
  1014                           ;psect for function _binaryToDecimal
  1015                           
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _binaryToDecimal: [wreg-fsr0h+status,2+status,0+btemp+1]
  1019                           ;binaryToDecimal@binaryVector stored from wreg
  1020     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1021     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1022     00F6  00CC               	movwf	binaryToDecimal@binaryVector
  1023     00F7                     l862:
  1024                           
  1025                           ;Bibliotecas/IR_C.c: 11: uint32_t decimalValue = 0;
  1026     00F7  3000               	movlw	0
  1027     00F8  00D0               	movwf	binaryToDecimal@decimalValue+3
  1028     00F9  3000               	movlw	0
  1029     00FA  00CF               	movwf	binaryToDecimal@decimalValue+2
  1030     00FB  3000               	movlw	0
  1031     00FC  00CE               	movwf	binaryToDecimal@decimalValue+1
  1032     00FD  3000               	movlw	0
  1033     00FE  00CD               	movwf	binaryToDecimal@decimalValue
  1034     00FF                     l864:
  1035                           
  1036                           ;Bibliotecas/IR_C.c: 12:     for (int i = 0; i < 32; i++) {
  1037     00FF  01D1               	clrf	binaryToDecimal@i
  1038     0100  01D2               	clrf	binaryToDecimal@i+1
  1039     0101                     l870:
  1040                           
  1041                           ;Bibliotecas/IR_C.c: 14:         decimalValue = (decimalValue << 1) + (binaryVector[i] -
      +                           '0');
  1042     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1043     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1044     0103  0851               	movf	binaryToDecimal@i,w
  1045     0104  074C               	addwf	binaryToDecimal@binaryVector,w
  1046     0105  00C1               	movwf	??_binaryToDecimal
  1047     0106  0841               	movf	??_binaryToDecimal,w
  1048     0107  0084               	movwf	4
  1049     0108  1383               	bcf	3,7	;select IRP bank0
  1050     0109  0800               	movf	0,w
  1051     010A  3ED0               	addlw	208
  1052     010B  00C2               	movwf	??_binaryToDecimal+1
  1053     010C  30FF               	movlw	255
  1054     010D  1803               	skipnc
  1055     010E  3000               	movlw	0
  1056     010F  00C3               	movwf	??_binaryToDecimal+2
  1057     0110  0842               	movf	??_binaryToDecimal+1,w
  1058     0111  00C4               	movwf	??_binaryToDecimal+3
  1059     0112  0843               	movf	??_binaryToDecimal+2,w
  1060     0113  00C5               	movwf	??_binaryToDecimal+4
  1061     0114  01C6               	clrf	??_binaryToDecimal+5
  1062     0115  01C7               	clrf	??_binaryToDecimal+6
  1063     0116  084D               	movf	binaryToDecimal@decimalValue,w
  1064     0117  00C8               	movwf	??_binaryToDecimal+7
  1065     0118  084E               	movf	binaryToDecimal@decimalValue+1,w
  1066     0119  00C9               	movwf	??_binaryToDecimal+8
  1067     011A  084F               	movf	binaryToDecimal@decimalValue+2,w
  1068     011B  00CA               	movwf	??_binaryToDecimal+9
  1069     011C  0850               	movf	binaryToDecimal@decimalValue+3,w
  1070     011D  00CB               	movwf	??_binaryToDecimal+10
  1071     011E  3001               	movlw	1
  1072     011F                     u285:
  1073     011F  1003               	clrc
  1074     0120  0DC8               	rlf	??_binaryToDecimal+7,f
  1075     0121  0DC9               	rlf	??_binaryToDecimal+8,f
  1076     0122  0DCA               	rlf	??_binaryToDecimal+9,f
  1077     0123  0DCB               	rlf	??_binaryToDecimal+10,f
  1078     0124                     u280:
  1079     0124  3EFF               	addlw	-1
  1080     0125  1D03               	skipz
  1081     0126  291F               	goto	u285
  1082     0127  0848               	movf	??_binaryToDecimal+7,w
  1083     0128  07C4               	addwf	??_binaryToDecimal+3,f
  1084     0129  0849               	movf	??_binaryToDecimal+8,w
  1085     012A  1803               	skipnc
  1086     012B  0F49               	incfsz	??_binaryToDecimal+8,w
  1087     012C  292E               	goto	u290
  1088     012D  292F               	goto	u291
  1089     012E                     u290:
  1090     012E  07C5               	addwf	??_binaryToDecimal+4,f
  1091     012F                     u291:
  1092     012F  084A               	movf	??_binaryToDecimal+9,w
  1093     0130  1803               	skipnc
  1094     0131  0F4A               	incfsz	??_binaryToDecimal+9,w
  1095     0132  2934               	goto	u292
  1096     0133  2935               	goto	u293
  1097     0134                     u292:
  1098     0134  07C6               	addwf	??_binaryToDecimal+5,f
  1099     0135                     u293:
  1100     0135  084B               	movf	??_binaryToDecimal+10,w
  1101     0136  1803               	skipnc
  1102     0137  0A4B               	incf	??_binaryToDecimal+10,w
  1103     0138  07C7               	addwf	??_binaryToDecimal+6,f
  1104     0139  0847               	movf	??_binaryToDecimal+6,w
  1105     013A  00D0               	movwf	binaryToDecimal@decimalValue+3
  1106     013B  0846               	movf	??_binaryToDecimal+5,w
  1107     013C  00CF               	movwf	binaryToDecimal@decimalValue+2
  1108     013D  0845               	movf	??_binaryToDecimal+4,w
  1109     013E  00CE               	movwf	binaryToDecimal@decimalValue+1
  1110     013F  0844               	movf	??_binaryToDecimal+3,w
  1111     0140  00CD               	movwf	binaryToDecimal@decimalValue
  1112     0141                     l872:
  1113                           
  1114                           ;Bibliotecas/IR_C.c: 15:     }
  1115     0141  3001               	movlw	1
  1116     0142  07D1               	addwf	binaryToDecimal@i,f
  1117     0143  1803               	skipnc
  1118     0144  0AD2               	incf	binaryToDecimal@i+1,f
  1119     0145  3000               	movlw	0
  1120     0146  07D2               	addwf	binaryToDecimal@i+1,f
  1121     0147                     l874:
  1122     0147  0852               	movf	binaryToDecimal@i+1,w
  1123     0148  3A80               	xorlw	128
  1124     0149  00FF               	movwf	btemp+1
  1125     014A  3080               	movlw	128
  1126     014B  027F               	subwf	btemp+1,w
  1127     014C  1D03               	skipz
  1128     014D  2950               	goto	u305
  1129     014E  3020               	movlw	32
  1130     014F  0251               	subwf	binaryToDecimal@i,w
  1131     0150                     u305:
  1132     0150  1C03               	skipc
  1133     0151  2953               	goto	u301
  1134     0152  2954               	goto	u300
  1135     0153                     u301:
  1136     0153  2901               	goto	l870
  1137     0154                     u300:
  1138     0154                     l876:
  1139                           
  1140                           ;Bibliotecas/IR_C.c: 16: return decimalValue;
  1141     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1142     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1143     0156  0850               	movf	binaryToDecimal@decimalValue+3,w
  1144     0157  00F7               	movwf	?_binaryToDecimal+3
  1145     0158  084F               	movf	binaryToDecimal@decimalValue+2,w
  1146     0159  00F6               	movwf	?_binaryToDecimal+2
  1147     015A  084E               	movf	binaryToDecimal@decimalValue+1,w
  1148     015B  00F5               	movwf	?_binaryToDecimal+1
  1149     015C  084D               	movf	binaryToDecimal@decimalValue,w
  1150     015D  00F4               	movwf	?_binaryToDecimal
  1151     015E                     l106:
  1152     015E  0008               	return
  1153     015F                     __end_of_binaryToDecimal:
  1154                           
  1155                           	psect	text3
  1156     01F3                     __ptext3:	
  1157 ;; *************** function _UART_Write_Text_ln *****************
  1158 ;; Defined at:
  1159 ;;		line 21 in file "Bibliotecas/EUSART_C.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  text            1    wreg     PTR const unsigned char 
  1162 ;;		 -> code(33), 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  text            1    9[COMMON] PTR const unsigned char 
  1165 ;;		 -> code(33), 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       0       0       0       0
  1176 ;;      Locals:         1       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0
  1178 ;;      Totals:         1       0       0       0       0
  1179 ;;Total ram usage:        1 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 3
  1182 ;; This function calls:
  1183 ;;		_UART_Write
  1184 ;;		_UART_Write_Text
  1185 ;; This function is called by:
  1186 ;;		_IR_Read
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190     01F3                     _UART_Write_Text_ln:	
  1191                           ;psect for function _UART_Write_Text_ln
  1192                           
  1193                           
  1194                           ;incstack = 0
  1195                           ; Regs used in _UART_Write_Text_ln: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1196                           ;UART_Write_Text_ln@text stored from wreg
  1197     01F3  00F9               	movwf	UART_Write_Text_ln@text
  1198     01F4                     l856:
  1199                           
  1200                           ;Bibliotecas/EUSART_C.c: 22:     UART_Write_Text(text);
  1201     01F4  0879               	movf	UART_Write_Text_ln@text,w
  1202     01F5  120A  118A  21D2  120A  118A  	fcall	_UART_Write_Text
  1203     01FA                     l858:
  1204                           
  1205                           ;Bibliotecas/EUSART_C.c: 23:     UART_Write('\r');
  1206     01FA  300D               	movlw	13
  1207     01FB  120A  118A  221A  120A  118A  	fcall	_UART_Write
  1208     0200                     l860:
  1209                           
  1210                           ;Bibliotecas/EUSART_C.c: 24:     UART_Write('\n');
  1211     0200  300A               	movlw	10
  1212     0201  120A  118A  221A  120A  118A  	fcall	_UART_Write
  1213     0206                     l74:
  1214     0206  0008               	return
  1215     0207                     __end_of_UART_Write_Text_ln:
  1216                           
  1217                           	psect	text4
  1218     01D2                     __ptext4:	
  1219 ;; *************** function _UART_Write_Text *****************
  1220 ;; Defined at:
  1221 ;;		line 14 in file "Bibliotecas/EUSART_C.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  text            1    wreg     PTR const unsigned char 
  1224 ;;		 -> code(33), 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  text            1    8[COMMON] PTR const unsigned char 
  1227 ;;		 -> code(33), 
  1228 ;;  i               2    6[COMMON] int 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       0       0       0       0
  1239 ;;      Locals:         3       0       0       0       0
  1240 ;;      Temps:          1       0       0       0       0
  1241 ;;      Totals:         4       0       0       0       0
  1242 ;;Total ram usage:        4 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 2
  1245 ;; This function calls:
  1246 ;;		_UART_Write
  1247 ;; This function is called by:
  1248 ;;		_UART_Write_Text_ln
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252     01D2                     _UART_Write_Text:	
  1253                           ;psect for function _UART_Write_Text
  1254                           
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1258                           ;UART_Write_Text@text stored from wreg
  1259     01D2  00F8               	movwf	UART_Write_Text@text
  1260     01D3                     l848:
  1261                           
  1262                           ;Bibliotecas/EUSART_C.c: 15:     int i;;Bibliotecas/EUSART_C.c: 16:     for(i=0;text[i]!
      +                          ='\0';i++){
  1263     01D3  01F6               	clrf	UART_Write_Text@i
  1264     01D4  01F7               	clrf	UART_Write_Text@i+1
  1265     01D5  29E7               	goto	l854
  1266     01D6                     l850:
  1267                           
  1268                           ;Bibliotecas/EUSART_C.c: 17:         UART_Write(text[i]);
  1269     01D6  0876               	movf	UART_Write_Text@i,w
  1270     01D7  0778               	addwf	UART_Write_Text@text,w
  1271     01D8  00F5               	movwf	??_UART_Write_Text
  1272     01D9  0875               	movf	??_UART_Write_Text,w
  1273     01DA  0084               	movwf	4
  1274     01DB  0800               	movf	0,w
  1275     01DC  120A  118A  221A  120A  118A  	fcall	_UART_Write
  1276     01E1                     l852:
  1277                           
  1278                           ;Bibliotecas/EUSART_C.c: 18:     }
  1279     01E1  3001               	movlw	1
  1280     01E2  07F6               	addwf	UART_Write_Text@i,f
  1281     01E3  1803               	skipnc
  1282     01E4  0AF7               	incf	UART_Write_Text@i+1,f
  1283     01E5  3000               	movlw	0
  1284     01E6  07F7               	addwf	UART_Write_Text@i+1,f
  1285     01E7                     l854:
  1286     01E7  0876               	movf	UART_Write_Text@i,w
  1287     01E8  0778               	addwf	UART_Write_Text@text,w
  1288     01E9  00F5               	movwf	??_UART_Write_Text
  1289     01EA  0875               	movf	??_UART_Write_Text,w
  1290     01EB  0084               	movwf	4
  1291     01EC  1383               	bcf	3,7	;select IRP bank0
  1292     01ED  0800               	movf	0,w
  1293     01EE  1D03               	btfss	3,2
  1294     01EF  29F1               	goto	u271
  1295     01F0  29F2               	goto	u270
  1296     01F1                     u271:
  1297     01F1  29D6               	goto	l850
  1298     01F2                     u270:
  1299     01F2                     l71:
  1300     01F2  0008               	return
  1301     01F3                     __end_of_UART_Write_Text:
  1302                           
  1303                           	psect	text5
  1304     021A                     __ptext5:	
  1305 ;; *************** function _UART_Write *****************
  1306 ;; Defined at:
  1307 ;;		line 3 in file "Bibliotecas/EUSART_C.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  data            1    wreg     const unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  data            1    4[COMMON] const unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         1       0       0       0       0
  1325 ;;Total ram usage:        1 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_UART_Write_Text
  1332 ;;		_UART_Write_Text_ln
  1333 ;;		_UART_Write_ln
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337     021A                     _UART_Write:	
  1338                           ;psect for function _UART_Write
  1339                           
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _UART_Write: [wreg]
  1343                           ;UART_Write@data stored from wreg
  1344     021A  00F4               	movwf	UART_Write@data
  1345     021B                     l844:
  1346     021B                     l59:	
  1347                           ;Bibliotecas/EUSART_C.c: 4:     while(!TRMT);
  1348                           
  1349     021B  1683               	bsf	3,5	;RP0=1, select bank1
  1350     021C  1303               	bcf	3,6	;RP1=0, select bank1
  1351     021D  1C98               	btfss	24,1	;volatile
  1352     021E  2A20               	goto	u261
  1353     021F  2A21               	goto	u260
  1354     0220                     u261:
  1355     0220  2A1B               	goto	l59
  1356     0221                     u260:
  1357     0221                     l846:
  1358                           
  1359                           ;Bibliotecas/EUSART_C.c: 5:     TXREG = data;
  1360     0221  0874               	movf	UART_Write@data,w
  1361     0222  1283               	bcf	3,5	;RP0=0, select bank0
  1362     0223  1303               	bcf	3,6	;RP1=0, select bank0
  1363     0224  0099               	movwf	25	;volatile
  1364     0225                     l62:
  1365     0225  0008               	return
  1366     0226                     __end_of_UART_Write:
  1367                           
  1368                           	psect	text6
  1369     015F                     __ptext6:	
  1370 ;; *************** function _global *****************
  1371 ;; Defined at:
  1372 ;;		line 21 in file "main.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, btemp+1
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          4       0       0       0       0
  1389 ;;      Totals:         4       0       0       0       0
  1390 ;;Total ram usage:        4 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		Interrupt level 1
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399     015F                     _global:	
  1400                           ;psect for function _global
  1401                           
  1402     015F                     i1l956:
  1403                           
  1404                           ;main.c: 22:     if (INTF){
  1405     015F  1C8B               	btfss	11,1	;volatile
  1406     0160  2962               	goto	u43_21
  1407     0161  2963               	goto	u43_20
  1408     0162                     u43_21:
  1409     0162  2984               	goto	i1l40
  1410     0163                     u43_20:
  1411     0163                     i1l958:
  1412                           
  1413                           ;main.c: 23:         counter++;
  1414     0163  3001               	movlw	1
  1415     0164  00FF               	movwf	btemp+1
  1416     0165  087F               	movf	btemp+1,w
  1417     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1418     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1419     0168  07E0               	addwf	_counter,f
  1420     0169                     i1l960:
  1421                           
  1422                           ;main.c: 24:         _delay((unsigned long)((100)*(20000000/4000000.0)));
  1423     0169  30A6               	movlw	166
  1424     016A  00F0               	movwf	??_global
  1425     016B                     u49_27:
  1426     016B  0BF0               	decfsz	??_global,f
  1427     016C  296B               	goto	u49_27
  1428     016D  0000               	nop
  1429     016E                     i1l962:
  1430                           
  1431                           ;main.c: 26:         if(PORTBbits.RB0 == 1 && trava == 0){
  1432     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1433     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1434     0170  1C06               	btfss	6,0	;volatile
  1435     0171  2973               	goto	u44_21
  1436     0172  2974               	goto	u44_20
  1437     0173                     u44_21:
  1438     0173  297A               	goto	i1l38
  1439     0174                     u44_20:
  1440     0174                     i1l964:
  1441     0174  085F               	movf	_trava,w
  1442     0175  1D03               	btfss	3,2
  1443     0176  2978               	goto	u45_21
  1444     0177  2979               	goto	u45_20
  1445     0178                     u45_21:
  1446     0178  297A               	goto	i1l38
  1447     0179                     u45_20:
  1448     0179                     i1l966:
  1449                           
  1450                           ;main.c: 27:             INTF = 0;
  1451     0179  108B               	bcf	11,1	;volatile
  1452     017A                     i1l38:	
  1453                           ;main.c: 28:         }
  1454                           
  1455                           
  1456                           ;main.c: 29:         if(PORTBbits.RB0 == 0 && trava != 0){
  1457     017A  1806               	btfsc	6,0	;volatile
  1458     017B  297D               	goto	u46_21
  1459     017C  297E               	goto	u46_20
  1460     017D                     u46_21:
  1461     017D  2984               	goto	i1l40
  1462     017E                     u46_20:
  1463     017E                     i1l968:
  1464     017E  085F               	movf	_trava,w
  1465     017F  1903               	btfsc	3,2
  1466     0180  2982               	goto	u47_21
  1467     0181  2983               	goto	u47_20
  1468     0182                     u47_21:
  1469     0182  2984               	goto	i1l40
  1470     0183                     u47_20:
  1471     0183                     i1l970:
  1472                           
  1473                           ;main.c: 30:             INTF = 0;
  1474     0183  108B               	bcf	11,1	;volatile
  1475     0184                     i1l40:
  1476     0184  0873               	movf	??_global+3,w
  1477     0185  00FF               	movwf	btemp+1
  1478     0186  0872               	movf	??_global+2,w
  1479     0187  008A               	movwf	10
  1480     0188  0E71               	swapf	??_global+1,w
  1481     0189  0083               	movwf	3
  1482     018A  0EFE               	swapf	btemp,f
  1483     018B  0E7E               	swapf	btemp,w
  1484     018C  0009               	retfie
  1485     018D                     __end_of_global:
  1486     007E                     btemp	set	126	;btemp
  1487     007E                     wtemp0	set	126
  1488                           
  1489                           	psect	intentry
  1490     0004                     __pintentry:	
  1491                           ;incstack = 0
  1492                           ; Regs used in _global: [wreg+status,2+status,0+btemp+1]
  1493                           
  1494     0004                     interrupt_function:
  1495     007E                     saved_w	set	btemp
  1496     0004  00FE               	movwf	btemp
  1497     0005  0E03               	swapf	3,w
  1498     0006  00F1               	movwf	??_global+1
  1499     0007  080A               	movf	10,w
  1500     0008  00F2               	movwf	??_global+2
  1501     0009  087F               	movf	btemp+1,w
  1502     000A  00F3               	movwf	??_global+3
  1503     000B  120A  118A  295F   	ljmp	_global
  1504                           
  1505                           	psect	idloc
  1506                           
  1507                           ;Config register IDLOC0 @ 0x2000
  1508                           ;	unspecified, using default values
  1509     2000                     	org	8192
  1510     2000  3FFF               	dw	16383
  1511                           
  1512                           ;Config register IDLOC1 @ 0x2001
  1513                           ;	unspecified, using default values
  1514     2001                     	org	8193
  1515     2001  3FFF               	dw	16383
  1516                           
  1517                           ;Config register IDLOC2 @ 0x2002
  1518                           ;	unspecified, using default values
  1519     2002                     	org	8194
  1520     2002  3FFF               	dw	16383
  1521                           
  1522                           ;Config register IDLOC3 @ 0x2003
  1523                           ;	unspecified, using default values
  1524     2003                     	org	8195
  1525     2003  3FFF               	dw	16383
  1526                           
  1527                           	psect	config
  1528                           
  1529                           ;Config register CONFIG @ 0x2007
  1530                           ;	Oscillator Selection bits
  1531                           ;	FOSC = HS, HS oscillator
  1532                           ;	Watchdog Timer Enable bit
  1533                           ;	WDTE = OFF, WDT disabled
  1534                           ;	Power-up Timer Enable bit
  1535                           ;	PWRTE = OFF, PWRT disabled
  1536                           ;	Brown-out Reset Enable bit
  1537                           ;	BOREN = OFF, BOR disabled
  1538                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1539                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1540                           ;	Data EEPROM Memory Code Protection bit
  1541                           ;	CPD = OFF, Data EEPROM code protection off
  1542                           ;	Flash Program Memory Write Enable bits
  1543                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1544                           ;	In-Circuit Debugger Mode bit
  1545                           ;	DEBUG = 0x1, unprogrammed default
  1546                           ;	Flash Program Memory Code Protection bit
  1547                           ;	CP = OFF, Code protection off
  1548     2007                     	org	8199
  1549     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     25      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    binaryToDecimal@binaryVector	PTR const unsigned char  size(1) Largest target is 33
		 -> code(BANK0[33]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 33
		 -> code(BANK0[33]), 

    UART_Write_Text_ln@text	PTR const unsigned char  size(1) Largest target is 33
		 -> code(BANK0[33]), 


Critical Paths under _main in COMMON

    _IR_Read->_UART_Write_Text_ln
    _UART_Write_Text_ln->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _global in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_IR_Read
    _IR_Read->_binaryToDecimal

Critical Paths under _global in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _global in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     527
                            _IR_Read
 ---------------------------------------------------------------------------------
 (1) _IR_Read                                              7     7      0     527
                                             18 BANK0      7     7      0
                 _UART_Write_Text_ln
                    _binaryToDecimal
 ---------------------------------------------------------------------------------
 (2) _binaryToDecimal                                     22    18      4     169
                                              4 COMMON     4     0      4
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text_ln                                   1     1      0     222
                                              9 COMMON     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (3) _UART_Write_Text                                      4     4      0     145
                                              5 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _global                                               4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IR_Read
     _UART_Write_Text_ln
       _UART_Write
       _UART_Write_Text
         _UART_Write
     _binaryToDecimal

 _global (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 13:06:05 2024

                          pc 0002                           l62 0225                           l71 01F2  
                         l74 0206                           l59 021B                           fsr 0004  
                        l106 015E                          l114 00F3                          l124 00F3  
                        l900 0052                          l902 005A                          l920 0093  
                        l904 0060                          l850 01D6                          l922 0099  
                        l914 0077                          l906 006E                          l844 021B  
                        l852 01E1                          l860 0200                          l924 009F  
                        l932 00AE                          l916 007F                          l908 0074  
                        l846 0221                          l854 01E7                          l870 0101  
                        l862 00F7                          l950 00CD                          l934 00B4  
                        l926 00A5                          l918 0085                          l848 01D3  
                        l856 01F4                          l872 0141                          l864 00FF  
                        l952 00DD                          l936 00BA                          l944 00C1  
                        l928 00A9                          l880 002A                          l858 01FA  
                        l874 0147                          l954 00E3                          l946 00C7  
                        l882 0032                          l890 0043                          l876 0154  
                        l948 00CA                          l892 0049                          l884 0038  
                        l980 0194                          l972 018D                          l894 004F  
                        l886 003B                          l990 019D                          l982 0195  
                        l974 0191                          l888 0041                          l992 01A4  
                        l984 0198                          l976 0192                          l994 01A7  
                        l986 0199                          l978 0193                          l996 01A8  
                        l988 019A                          u300 0154                          u301 0153  
                        u310 0032                          u311 0031                          u400 00B4  
                        u320 0038                          u305 0150                          u401 00B3  
                        u321 0037                          u410 00BA                          u330 0049  
                        u411 00B9                          u331 0048                          u260 0221  
                        u420 00C7                          u340 004F                          u261 0220  
                        u421 00C6                          u341 004E                          u270 01F2  
                        u350 006D                          u271 01F1                          u351 006C  
                        u280 0124                          u360 0074                          u361 0073  
                        u290 012E                          u370 0092                          u291 012F  
                        u371 0091                          u355 0069                          u292 0134  
                        u380 0099                          u293 0135                          u285 011F  
                        u381 0098                          u390 009F                          u391 009E  
                        u375 008E                          u487 00EB                          fsr0 0004  
                        indf 0000                         _INTF 0059                         i1l40 0184  
                       _RCIF 0065                         i1l38 017A                         _TRMT 04C1  
            __end_of_IR_Read 00F4                         _code 0020                         _main 018D  
                       btemp 007E                         start 000E      __end_of_UART_Write_Text 01F3  
                      ?_main 0070                        _CMCON 009C                        i1l960 0169  
                      i1l970 0183                        i1l962 016E                        i1l964 0174  
                      i1l956 015F                        i1l966 0179                        i1l958 0163  
                      i1l968 017E                        _RCREG 001A                        _SPBRG 0099  
                      u43_20 0163                        u43_21 0162                        _PORTB 0006  
                      _PORTC 0007                        u44_20 0174                        u44_21 0173  
                      u45_20 0179                        u45_21 0178                        u46_20 017E  
                      u46_21 017D                        u47_20 0183                        u47_21 0182  
                      _TRISB 0086                        _TRISC 0087                        u49_27 016B  
                      _TXREG 0019                  ?_UART_Write 0070                        _trava 005F  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 0011                 __end_of_main 01B1                       ??_main 007A  
                  ??_IR_Read 0053             ?_UART_Write_Text 0070                       _global 015F  
                     saved_w 007E                 _decimalValue 005A      __end_of__initialization 0026  
             __pcstackCOMMON 0070                 __pidataBANK0 01B1               _OPTION_REGbits 0081  
                 __pbssBANK0 005A                   __pmaintext 018D                   _code_count 005E  
                 __pintentry 0004                      ?_global 0070   __end_of_UART_Write_Text_ln 0207  
               ??_UART_Write 0074                      _IR_Read 002A           __end_of_UART_Write 0226  
                    __ptext1 002A                      __ptext2 00F4                      __ptext3 01F3  
                    __ptext4 01D2                      __ptext5 021A                      __ptext6 015F  
                    _counter 0060            ??_binaryToDecimal 0041  binaryToDecimal@decimalValue 004D  
       end_of_initialization 0026                    _RCSTAbits 0018                    _PORTBbits 0006  
             UART_Write@data 0074                    _TXSTAbits 0098  binaryToDecimal@binaryVector 004C  
             __end_of_global 018D          start_initialization 0011                   init_fetch0 0207  
                __pdataBANK0 0020                     ??_global 0070                    ___latbits 0002  
              __pcstackBANK0 0041                     ?_IR_Read 0070           _UART_Write_Text_ln 01F3  
        ?_UART_Write_Text_ln 0070              _binaryToDecimal 00F4                     IR_Read@i 0056  
       ??_UART_Write_Text_ln 0079            ??_UART_Write_Text 0075            interrupt_function 0004  
    __end_of_binaryToDecimal 015F                 IR_Read@i_299 0058          UART_Write_Text@text 0078  
           binaryToDecimal@i 0051       UART_Write_Text_ln@text 0079                   _INTCONbits 000B  
                   init_ram0 020B                     intlevel1 0000             ?_binaryToDecimal 0074  
            _UART_Write_Text 01D2                   _UART_Write 021A             UART_Write_Text@i 0076  
